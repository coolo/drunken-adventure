/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19990823 Lutz Uhlmann                                                       */
/* 20080128 Lutz Uhlmann fixed stud orientation                                */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_30159: Plate 2 x 2 with Magnet Holder Downwards                          */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_30159)
#else
#declare lg_angle1=atan2(0.16,0.24);
#declare lg_30159 =
union {
 #declare ROT = 0;
 #while (ROT < 2)
  union {
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>
   }
   box {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_CORNER_SPACE>
   }
   object {
    lg_knob
    rotate <0, 0, 180*ROT>
    translate <0.5*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, 0>
   }
   object {
    lg_knob
    rotate <0, 0, 180*ROT>
    translate <-0.5*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, 0>
   }
   #if (ROT = 1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  box {
   <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
   <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT-LG_E>
  }
  union {
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_TOP_HEIGHT-2*LG_E>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <0, 0, LG_E>,
    <0, 0, -LG_CORNER_SPACE>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
  }
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_CORNER_SPACE>
 }
 #declare MIR = -1;
 #while (MIR < 2)
  union {
   #declare MIR2 = -1;
   #while (MIR2 < 2)
    union {
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>
     }
     sphere {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.4-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.4-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <-LG_E, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
      <LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.24/cos(lg_angle1)>
      rotate <0, -lg_angle1*180/pi, 0>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0.2-LG_CORNER_SPACE>
     }
     sphere {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE-LG_E>
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.34>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>,
      LG_CORNER_SPACE
     }
     box {
      <0.08, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE+LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>
     }
     matrix <MIR, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
    }
    #declare MIR2 = MIR2 + 2;
   #end
   difference {
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_CORNER_SPACE-LG_E>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, 0.44-LG_CORNER_SPACE>
    }
    union {
     box {
      <0, LG_BRICK_WIDTH+LG_E, 0>,
      <LG_WALL_WIDTH+LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.24/cos(lg_angle1)+LG_E>
      rotate <0, -lg_angle1*180/pi, 0>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0.2-LG_CORNER_SPACE>
     }
     box {
      <0, LG_BRICK_WIDTH+LG_E, 0>,
      <-LG_WALL_WIDTH-LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.24/cos(lg_angle1)+LG_E>
      rotate <0, lg_angle1*180/pi, 0>
      translate <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, 0.2-LG_CORNER_SPACE>
     }
     box {
      <-0.08-LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_E, 0.44>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.34>
     }
     cylinder {
      <0, LG_BRICK_WIDTH, 0.34>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH, 0.34>,
      0.08
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.34>,
      0.08+LG_CORNER_SPACE
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.34>,
      <0, LG_BRICK_WIDTH+LG_E, 0.34>,
      0.08+LG_CORNER_SPACE
     }
     cylinder {
      <0, LG_BRICK_WIDTH, 0.24>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH, 0.24>,
      0.08
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.24>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.24>,
      0.08+LG_CORNER_SPACE
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.24>,
      <0, LG_BRICK_WIDTH+LG_E, 0.24>,
      0.08+LG_CORNER_SPACE
     }
    }
   }
   difference {
    union {
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.24>
     }
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.24>
     }
    }
    box {
     <LG_WALL_WIDTH, LG_BRICK_WIDTH+LG_E, 0.29>,
     <-LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.4>
    }
   }
   intersection {
    union {
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.34>
     }
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>
     }
    }
    box {
     <LG_WALL_WIDTH, LG_BRICK_WIDTH+LG_E, 0.29>,
     <-LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.34>
    }
   }
   matrix <1, 0, 0, 0, MIR, 0, 0, 0, -1, 0, 0, -LG_PLATE_HEIGHT>
  }
  #declare MIR = MIR + 2;
 #end
}

#declare lg_30159_clear =
merge {
 #declare ROT = 0;
 #while (ROT < 2)
  merge {
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>
   }
   box {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_CORNER_SPACE>
   }
   object {
    lg_knob_clear
    rotate <0, 0, 180*ROT>
    translate <0.5*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, 0>
   }
   object {
    lg_knob_clear
    rotate <0, 0, 180*ROT>
    translate <-0.5*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, 0>
   }
   #if (ROT = 1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  box {
   <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
   <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT-LG_E>
  }
  union {
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_TOP_HEIGHT-2*LG_E>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <0, 0, LG_E>,
    <0, 0, -LG_CORNER_SPACE>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
  }
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_CORNER_SPACE>
 }
 #declare MIR = -1;
 #while (MIR < 2)
  merge {
   #declare MIR2 = -1;
   #while (MIR2 < 2)
    merge {
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>
     }
     sphere {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.4-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.4-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.2-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <-LG_E, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
      <LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.24/cos(lg_angle1)>
      rotate <0, -lg_angle1*180/pi, 0>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0.2-LG_CORNER_SPACE>
     }
     sphere {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     sphere {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44>,
      <0.24-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE-LG_E>
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.34>,
      LG_CORNER_SPACE
     }
     cylinder {
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>,
      LG_CORNER_SPACE
     }
     box {
      <0.08, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.44-LG_CORNER_SPACE>,
      <0.08+LG_CORNER_SPACE+LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>
     }
     matrix <MIR, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
    }
    #declare MIR2 = MIR2 + 2;
   #end
   difference {
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_CORNER_SPACE-LG_E>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, 0.44-LG_CORNER_SPACE>
    }
    union {
     box {
      <0, LG_BRICK_WIDTH+LG_E, 0>,
      <LG_WALL_WIDTH+LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.24/cos(lg_angle1)+LG_E>
      rotate <0, -lg_angle1*180/pi, 0>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0.2-LG_CORNER_SPACE>
     }
     box {
      <0, LG_BRICK_WIDTH+LG_E, 0>,
      <-LG_WALL_WIDTH-LG_E, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.24/cos(lg_angle1)+LG_E>
      rotate <0, lg_angle1*180/pi, 0>
      translate <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, 0.2-LG_CORNER_SPACE>
     }
     box {
      <-0.08-LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_E, 0.44>,
      <0.08+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.34>
     }
     cylinder {
      <0, LG_BRICK_WIDTH, 0.34>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH, 0.34>,
      0.08
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.34>,
      0.08+LG_CORNER_SPACE
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.34>,
      <0, LG_BRICK_WIDTH+LG_E, 0.34>,
      0.08+LG_CORNER_SPACE
     }
     cylinder {
      <0, LG_BRICK_WIDTH, 0.24>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH, 0.24>,
      0.08
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.24>,
      <0, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.24>,
      0.08+LG_CORNER_SPACE
     }
     cylinder {
      <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.24>,
      <0, LG_BRICK_WIDTH+LG_E, 0.24>,
      0.08+LG_CORNER_SPACE
     }
    }
   }
   difference {
    merge {
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.24>
     }
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.24>
     }
    }
    box {
     <LG_WALL_WIDTH, LG_BRICK_WIDTH+LG_E, 0.29>,
     <-LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.4>
    }
   }
   intersection {
    merge {
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.34>
     }
     torus {
      0.08+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      translate <0, LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_CORNER_SPACE, 0.34>
     }
    }
    box {
     <LG_WALL_WIDTH, LG_BRICK_WIDTH+LG_E, 0.29>,
     <-LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, 0.34>
    }
   }
   matrix <1, 0, 0, 0, MIR, 0, 0, 0, -1, 0, 0, -LG_PLATE_HEIGHT>
  }
  #declare MIR = MIR + 2;
 #end
}

#end
