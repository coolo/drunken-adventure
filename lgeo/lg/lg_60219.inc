/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 20080208 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_60219: Slope Brick 45 6 x 4 Inverted Double with open center and 3 holes */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_60219)
#else
#declare lg_angle = atan2(LG_BRICK_WIDTH, LG_BRICK_WIDTH);
#declare lg_60219 =
union {
 #declare ROT = 0;
 #while (ROT < 2)
  union {
   sphere {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   difference {
    box {
     <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
     <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-0.12, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
    }
    union {
     box {
      <2*LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH+LG_E, 0>,
      <-LG_E, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -LG_BRICK_WIDTH>
      rotate <0, -lg_angle*180/pi, 0>
      translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
     }
     box {
      <-2*LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH+LG_E, 0>,
      <-LG_E, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -LG_BRICK_WIDTH>
      rotate <0, lg_angle*180/pi, 0>
      translate <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
     }
     box {
      <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH+LG_E, 0>,
      <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
     }
    }
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_HEIGHT>
   }
   box {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-0.12, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-0.12, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <0, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0.8*LG_WALL_WIDTH>
    rotate <0, -lg_angle*180/pi, 0>
    translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
    <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+0.12, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE-LG_E>,
    <2*LG_BRICK_WIDTH+0.12, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0>
   }
   box {
    <3*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>
   }
   difference {
    union {
     box {
      <3*LG_BRICK_WIDTH-0.12, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
      <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_WALL_WIDTH+LG_CORNER_SPACE>
     }
     #declare CYL = -1.5;
     #while (CYL < 2)
      difference {
       union {
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH>,
         LG_KNOB_RADIUS
        }
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH>,
         LG_KNOB_RADIUS-LG_CORNER_SPACE
        }
       }
       union {
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT+LG_E>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>,
         LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
        }
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH-LG_E>, 
         LG_KNOB_INNER_RADIUS 
        }
       }
      }
      torus {
       LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
       LG_CORNER_SPACE
       rotate <90, 0, 0>
       translate <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>
      }
      torus {
       LG_KNOB_RADIUS-LG_CORNER_SPACE,
       LG_CORNER_SPACE
       rotate <90, 0, 0>
       translate <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>
      }
      #declare CYL = CYL + 1;
     #end
    }
    box {
     <2*LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH, -LG_BRICK_WIDTH/2>,
     <0, -2*LG_BRICK_WIDTH, LG_WALL_WIDTH/2>
     rotate <0, -lg_angle*180/pi, 0>
     translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
    }
   }
   #declare KNOB = -1.5;
   #while (KNOB < 2)
    object {
     lg_knob
     rotate <0, 0, 180*ROT>
     translate <KNOB*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT>
    }
    object {
     lg_knob
     rotate <0, 0, 180*ROT>
     translate <KNOB*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT>
    }
    #declare KNOB = KNOB + 1;
   #end
   #if (ROT = 1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  box {
   <2*LG_BRICK_WIDTH+LG_E, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT>,
   <-2*LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
  }
  union {
   #declare KNOB = -1.5;
   #while (KNOB < 2)
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, -0.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, -1.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    #declare KNOB = KNOB + 1;
   #end
   #declare HOLE = -1;
   #while (HOLE < 2)
    cylinder {
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT+LG_E>,
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
     LG_KNOB_RADIUS+LG_CORNER_SPACE
    }
    cylinder {
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT>,
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT-LG_E>,
     LG_KNOB_RADIUS
    }
    #declare HOLE = HOLE + 1;
   #end
  }
 }
 #declare CYL = -1;
 #while (CYL < 2)
  object {
   lg_plate_cylinder
   translate <CYL*LG_BRICK_WIDTH, LG_BRICK_WIDTH, -LG_BRICK_HEIGHT>
  }
  object {
   lg_plate_cylinder
   translate <CYL*LG_BRICK_WIDTH, 0, -LG_BRICK_HEIGHT>
  }
  object {
   lg_plate_cylinder
   translate <CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH, -LG_BRICK_HEIGHT>
  }
  torus {
   LG_KNOB_RADIUS+LG_CORNER_SPACE,
   LG_CORNER_SPACE
   rotate <90, 0, 0>
   translate <0, CYL*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
  }
  #declare CYL = CYL + 1;
 #end
}

#declare lg_60219_clear =
merge {
 #declare ROT = 0;
 #while (ROT < 2)
  merge {
   sphere {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   difference {
    box {
     <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
     <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-0.12, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
    }
    union {
     box {
      <2*LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH+LG_E, 0>,
      <-LG_E, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -LG_BRICK_WIDTH>
      rotate <0, -lg_angle*180/pi, 0>
      translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
     }
     box {
      <-2*LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH+LG_E, 0>,
      <-LG_E, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -LG_BRICK_WIDTH>
      rotate <0, lg_angle*180/pi, 0>
      translate <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
     }
     box {
      <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH+LG_E, 0>,
      <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
     }
    }
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_HEIGHT>
   }
   box {
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-0.12, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <-3*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <-2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-0.12, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <0, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0.8*LG_WALL_WIDTH>
    rotate <0, -lg_angle*180/pi, 0>
    translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
    <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH+0.12, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE-LG_E>,
    <2*LG_BRICK_WIDTH+0.12, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0>
   }
   box {
    <3*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <3*LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>
   }
   difference {
    merge {
     box {
      <3*LG_BRICK_WIDTH-0.12, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
      <3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_WALL_WIDTH+LG_CORNER_SPACE>
     }
     #declare CYL = -1.5;
     #while (CYL < 2)
      difference {
       merge {
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH>,
         LG_KNOB_RADIUS
        }
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH>,
         LG_KNOB_RADIUS-LG_CORNER_SPACE
        }
       }
       union {
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT+LG_E>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>,
         LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
        }
        cylinder {
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT>,
         <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH-LG_E>, 
         LG_KNOB_INNER_RADIUS 
        }
       }
      }
      torus {
       LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
       LG_CORNER_SPACE
       rotate <90, 0, 0>
       translate <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>
      }
      torus {
       LG_KNOB_RADIUS-LG_CORNER_SPACE,
       LG_CORNER_SPACE
       rotate <90, 0, 0>
       translate <2.5*LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, LG_KNOB_HEIGHT-LG_CORNER_SPACE>
      }
      #declare CYL = CYL + 1;
     #end
    }
    box {
     <2*LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH, -LG_BRICK_WIDTH/2>,
     <0, -2*LG_BRICK_WIDTH, LG_WALL_WIDTH/2>
     rotate <0, -lg_angle*180/pi, 0>
     translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
    }
   }
   #declare KNOB = -1.5;
   #while (KNOB < 2)
    object {
     lg_knob_clear
     rotate <0, 0, 180*ROT>
     translate <KNOB*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT>
    }
    object {
     lg_knob_clear
     rotate <0, 0, 180*ROT>
     translate <KNOB*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT>
    }
    #declare KNOB = KNOB + 1;
   #end
   #if (ROT = 1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  box {
   <2*LG_BRICK_WIDTH+LG_E, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT>,
   <-2*LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
  }
  union {
   #declare KNOB = -1.5;
   #while (KNOB < 2)
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, 0.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, -0.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    object {
     lg_knob_inner_space
     translate <KNOB*LG_BRICK_WIDTH, -1.5*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
    }
    #declare KNOB = KNOB + 1;
   #end
   #declare HOLE = -1;
   #while (HOLE < 2)
    cylinder {
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT+LG_E>,
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
     LG_KNOB_RADIUS+LG_CORNER_SPACE
    }
    cylinder {
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT>,
     <0, HOLE*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_TOP_HEIGHT-LG_E>,
     LG_KNOB_RADIUS
    }
    #declare HOLE = HOLE + 1;
   #end
  }
 }
 #declare CYL = -1;
 #while (CYL < 2)
  object {
   lg_plate_cylinder_clear
   translate <CYL*LG_BRICK_WIDTH, LG_BRICK_WIDTH, -LG_BRICK_HEIGHT>
  }
  object {
   lg_plate_cylinder_clear
   translate <CYL*LG_BRICK_WIDTH, 0, -LG_BRICK_HEIGHT>
  }
  object {
   lg_plate_cylinder_clear
   translate <CYL*LG_BRICK_WIDTH, -LG_BRICK_WIDTH, -LG_BRICK_HEIGHT>
  }
  torus {
   LG_KNOB_RADIUS+LG_CORNER_SPACE,
   LG_CORNER_SPACE
   rotate <90, 0, 0>
   translate <0, CYL*LG_BRICK_WIDTH, -2*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
  }
  #declare CYL = CYL + 1;
 #end
}

#declare lg_60219_slope =
merge {
 box {
  <LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  <0, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_WALL_WIDTH/2>
  rotate <0, -lg_angle*180/pi, 0>
  translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
 }
 box {
  <-LG_BRICK_WIDTH/cos(lg_angle), 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  <0, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_WALL_WIDTH/2>
  rotate <0, lg_angle*180/pi, 0>
  translate <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
 }
}

#end
