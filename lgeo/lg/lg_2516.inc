/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19990122 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_2516: Space Chainsaw Body                                                */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_2516)
#else
#declare lg_2516 =
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   #declare APP = 0;
   #while (APP < 3)
    union {
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS-LG_E, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS+0.0125, -LG_WALL_WIDTH>,
      0.04
     }
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS-LG_E, -3*LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS+0.0125, -3*LG_WALL_WIDTH>,
      0.04
     }
     torus {
      0.04,
      0.0125
      translate <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS, -LG_WALL_WIDTH>
     }
     torus {
      0.04,
      0.0125
      translate <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS, -3*LG_WALL_WIDTH>
     }
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH-0.04, LG_KNOB_RADIUS, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH-0.04, LG_KNOB_RADIUS, -3*LG_WALL_WIDTH>,
      0.0125
     }
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH+0.04, LG_KNOB_RADIUS, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH+0.04, LG_KNOB_RADIUS, -3*LG_WALL_WIDTH>,
      0.0125
     }
     box {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH-0.04, LG_KNOB_RADIUS-LG_E, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH+0.04, LG_KNOB_RADIUS+0.0125, -3*LG_WALL_WIDTH>
     }
    }
    #declare APP = APP + 1;
   #end
   torus {
    LG_KNOB_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   torus {
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   #declare RING = 0;
   #while (RING <7)
    torus {
     LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     translate <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH-RING*LG_WALL_WIDTH/2, -LG_PLATE_HEIGHT>
    }
    #declare RING = RING + 1;
   #end
   cylinder {
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS-LG_E, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_CORNER_SPACE-LG_E, -LG_PLATE_HEIGHT>,
    LG_KNOB_RADIUS-LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+2*LG_WALL_WIDTH, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_E, -LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_E, -LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE
   }

   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_KNOB_RADIUS+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_KNOB_RADIUS+LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   torus {
    LG_KNOB_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>
   }
   torus {
    LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>
   }
   torus {
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, 0>
    translate <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT-LG_CORNER_SPACE>
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT>,
    <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT-LG_CORNER_SPACE-LG_E>,
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_E>,
    <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT-LG_CORNER_SPACE>,
    LG_KNOB_INNER_RADIUS
   }
   difference {
    union {
     cylinder {
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE-LG_E, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_RADIUS-LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_RADIUS
     }
    }
    union {
     cylinder {
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT+LG_E, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH-LG_CORNER_SPACE-2*LG_E, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_INNER_RADIUS
     }
    }
   }
   #if (MIR = 1)
    matrix <-1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 torus {
  LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 cylinder {
  <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT>,
  <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
  LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE
 }
 cylinder {
  <-LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT+LG_E>,
  <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  LG_KNOB_INNER_RADIUS
 }
 torus {
  LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE>
 }
 torus {
  LG_KNOB_RADIUS-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE>
 }
 difference {
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE+LG_E>,
    LG_KNOB_RADIUS-LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE>,
    LG_KNOB_RADIUS
   }
  }
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT-LG_E>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE+LG_E>,
    LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
  }
 }
 difference {
  union {
   box {
    <-LG_BRICK_WIDTH, -LG_KNOB_RADIUS+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_KNOB_RADIUS, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_KNOB_RADIUS+LG_CORNER_SPACE, 0>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT>
   }
  }
  cylinder {
   <LG_BRICK_WIDTH+LG_E, 0, -LG_PLATE_HEIGHT>,
   <-LG_BRICK_WIDTH-LG_E, 0, -LG_PLATE_HEIGHT>,
   LG_KNOB_RADIUS
  }
 }
}

#declare lg_2516_clear =
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   #declare APP = 0;
   #while (APP < 3)
    merge {
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS-LG_E, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS+0.0125, -LG_WALL_WIDTH>,
      0.04
     }
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS-LG_E, -3*LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS+0.0125, -3*LG_WALL_WIDTH>,
      0.04
     }
     torus {
      0.04,
      0.0125
      translate <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS, -LG_WALL_WIDTH>
     }
     torus {
      0.04,
      0.0125
      translate <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH, LG_KNOB_RADIUS, -3*LG_WALL_WIDTH>
     }
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH-0.04, LG_KNOB_RADIUS, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH-0.04, LG_KNOB_RADIUS, -3*LG_WALL_WIDTH>,
      0.0125
     }
     cylinder {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH+0.04, LG_KNOB_RADIUS, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH+0.04, LG_KNOB_RADIUS, -3*LG_WALL_WIDTH>,
      0.0125
     }
     box {
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH-0.04, LG_KNOB_RADIUS-LG_E, -LG_WALL_WIDTH>,
      <-1.5*LG_WALL_WIDTH-APP*LG_WALL_WIDTH+0.04, LG_KNOB_RADIUS+0.0125, -3*LG_WALL_WIDTH>
     }
    }
    #declare APP = APP + 1;
   #end
   torus {
    LG_KNOB_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   torus {
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   #declare RING = 0;
   #while (RING <7)
    torus {
     LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     translate <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH-RING*LG_WALL_WIDTH/2, -LG_PLATE_HEIGHT>
    }
    #declare RING = RING + 1;
   #end
   cylinder {
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS-LG_E, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_CORNER_SPACE-LG_E, -LG_PLATE_HEIGHT>,
    LG_KNOB_RADIUS-LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+2*LG_WALL_WIDTH, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_E, -LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2, LG_KNOB_RADIUS+LG_KNOB_HEIGHT-LG_E, -LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE
   }

   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_KNOB_RADIUS+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_KNOB_RADIUS+LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   torus {
    LG_KNOB_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>
   }
   torus {
    LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>
   }
   torus {
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, 0>
    translate <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT-LG_CORNER_SPACE>
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT>,
    <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT-LG_CORNER_SPACE-LG_E>,
    LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_E>,
    <LG_BRICK_WIDTH/2, 0, LG_KNOB_HEIGHT-LG_CORNER_SPACE>,
    LG_KNOB_INNER_RADIUS
   }
   difference {
    merge {
     cylinder {
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE-LG_E, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_RADIUS-LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_RADIUS
     }
    }
    union {
     cylinder {
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT+LG_E, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT-LG_CORNER_SPACE, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH-LG_CORNER_SPACE-2*LG_E, 0, -LG_PLATE_HEIGHT>,
      <LG_BRICK_WIDTH+LG_KNOB_HEIGHT, 0, -LG_PLATE_HEIGHT>,
      LG_KNOB_INNER_RADIUS
     }
    }
   }
   #if (MIR = 1)
    matrix <-1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 torus {
  LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 cylinder {
  <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT>,
  <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
  LG_KNOB_INNER_RADIUS-LG_CORNER_SPACE
 }
 cylinder {
  <-LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT+LG_E>,
  <-LG_BRICK_WIDTH/2, 0, -3.5*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  LG_KNOB_INNER_RADIUS
 }
 torus {
  LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE>
 }
 torus {
  LG_KNOB_RADIUS-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE>
 }
 difference {
  merge {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE+LG_E>,
    LG_KNOB_RADIUS-LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE>,
    LG_KNOB_RADIUS
   }
  }
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT-LG_E>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT+LG_CORNER_SPACE+LG_E>,
    LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2, 0, -2*LG_PLATE_HEIGHT-LG_KNOB_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
  }
 }
 difference {
  merge {
   box {
    <-LG_BRICK_WIDTH, -LG_KNOB_RADIUS+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_KNOB_RADIUS, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS, -2*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_KNOB_RADIUS+LG_CORNER_SPACE, 0>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_KNOB_RADIUS-LG_CORNER_SPACE, -2*LG_PLATE_HEIGHT>
   }
  }
  cylinder {
   <LG_BRICK_WIDTH+LG_E, 0, -LG_PLATE_HEIGHT>,
   <-LG_BRICK_WIDTH-LG_E, 0, -LG_PLATE_HEIGHT>,
   LG_KNOB_RADIUS
  }
 }
}

#end
