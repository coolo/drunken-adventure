/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19990530 Lutz Uhlmann                                                       */
/* 20080116 Lutz Uhlmann fixed hollow stud logo and orientation                */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_4866: Windscreen 3 x 4 x 1 & 1/3 with 6 Studs                            */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_4866)
#else
#declare lg_angle=atan2(LG_BRICK_WIDTH, 3*LG_PLATE_HEIGHT)*180/pi;
#declare lg_4866 =
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   cylinder {
    <0, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+0.08>,
    LG_CORNER_SPACE
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH/2-LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <-LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE>
   }
   cylinder {
    <-LG_BRICK_WIDTH, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   torus {
    0.08-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+0.08>
   }
   intersection {
    difference {
     cylinder {
      <0, 0, 0>,
      <0, 0, -3*LG_PLATE_HEIGHT>,
      LG_BRICK_WIDTH/2
     }
     cylinder {
      <0, 0, LG_CORNER_SPACE+LG_E>,
      <0, 0, -4*LG_PLATE_HEIGHT>,
      LG_BRICK_WIDTH/2-LG_WALL_WIDTH
     }
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -4*LG_PLATE_HEIGHT>
    }
    matrix <1, 0, 2/LG_BRICK_WIDTH*LG_CORNER_SPACE*sin(lg_angle*pi/180),
            0, 1, 0,
            -.8/.96, 0, 1,
            LG_CORNER_SPACE*(cos(lg_angle*pi/180)-1), 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <0, 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH/2, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH/2, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
   intersection {
    difference {
     union {
      cylinder {
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
       LG_BRICK_WIDTH/2
      }
      cylinder {
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>,
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT>,
       LG_BRICK_WIDTH/2-LG_CORNER_SPACE
      }
     }
     cylinder {
      <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>,
      <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT-LG_E>,
      LG_BRICK_WIDTH/2-LG_WALL_WIDTH
     }
    }
    box {
     <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
     <1.5*LG_BRICK_WIDTH+LG_E, 2*LG_BRICK_WIDTH+LG_E, -4*LG_PLATE_HEIGHT-LG_E>
    }
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+0.08>,
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, -4*LG_PLATE_HEIGHT+0.08>,
    0.08-LG_CORNER_SPACE
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -4*LG_PLATE_HEIGHT+0.08>,
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+0.08>,
    0.08
   }
   box {
    <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH-LG_E, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
   }
   difference {
    union {
     box {
      <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
      <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, -LG_CORNER_SPACE>
     }
     box {
      <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -4*LG_PLATE_HEIGHT>,
      <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>
     }
    }
    union {
     box {
      <LG_BRICK_WIDTH+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
      <0, 0, -4*LG_PLATE_HEIGHT>
      matrix <1, 0, 2/LG_BRICK_WIDTH*LG_CORNER_SPACE*sin(lg_angle*pi/180),
              0, 1, 0,
              -.8/.96, 0, 1,
              LG_CORNER_SPACE*(cos(lg_angle*pi/180)-1), 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>
     }
     box {
      <-1.5*LG_BRICK_WIDTH-LG_E, 2*LG_BRICK_WIDTH+LG_E, -4*LG_PLATE_HEIGHT-LG_E>,
      <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -4*LG_PLATE_HEIGHT+0.08>
     }
    }
   }
   box {
    <-1.5*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE+LG_E, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -4*LG_PLATE_HEIGHT+0.08>
   }
   intersection {
    union {
     cylinder {
      <0, 0, 0>,
      <0, 0, -LG_CORNER_SPACE-LG_E>,
      LG_BRICK_WIDTH/2-LG_CORNER_SPACE
     }
     cylinder {
      <0, 0, -LG_CORNER_SPACE>,
      <0, 0, -LG_WALL_WIDTH>,
      LG_BRICK_WIDTH/2
     }
    } 
    box {
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH/2-LG_E, LG_E>,
     <0, 0, -LG_WALL_WIDTH-LG_E>
    }
    translate <-LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH+0.12, 0>
   }
   intersection {
    union {
     cylinder {
      <0, 0, 0>,
      <0, 0, -LG_CORNER_SPACE-LG_E>,
      LG_BRICK_WIDTH/2-LG_CORNER_SPACE
     }
     cylinder {
      <0, 0, -LG_CORNER_SPACE>,
      <0, 0, -LG_WALL_WIDTH>,
      LG_BRICK_WIDTH/2
     }
    } 
    box {
     <LG_BRICK_WIDTH/2-LG_E, LG_BRICK_WIDTH/2-LG_E, LG_E>,
     <0, 0, -LG_WALL_WIDTH-LG_E>
    }
    translate <0, 1.5*LG_BRICK_WIDTH, 0>
   }
   box {
    <0, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, 0>,
    <-LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <0, LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH>
   }
   box {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <0, 1.5*LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <-1.5*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <0, 1.5*LG_BRICK_WIDTH+0.12, -LG_WALL_WIDTH>
   }
   object {
    lg_tech_knob_logo
    rotate <0, 0, 90>
    scale <1, 1-2*MIR, 1>
    translate <0, 1.5*LG_BRICK_WIDTH, 0>
   }
   object {
    lg_tech_knob_logo
    rotate <0, 0, 90>
    scale <1, 1-2*MIR, 1>
    translate <-LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>
   }
   object {
    lg_tech_knob_logo
    rotate <0, 0, 90>
    scale <1, 1-2*MIR, 1>
    translate <0, 0.5*LG_BRICK_WIDTH, 0>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 cylinder {
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH/2, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH/2, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH/2, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH/2, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH-0.12-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 box {
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_E, -4*LG_PLATE_HEIGHT>,
  <LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -2*LG_BRICK_WIDTH+LG_WALL_WIDTH-LG_E, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>
 }
 box {
  <1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT>,
  <1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH, -1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>
 }
 box {
  <LG_BRICK_WIDTH/2, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_E, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -2*LG_BRICK_WIDTH+LG_WALL_WIDTH-LG_E, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 box {
  <1.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH, -1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 box {
  <1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>,
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_PLATE_INNER_HEIGHT>
 }
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -1.5*LG_BRICK_WIDTH, -LG_CORNER_SPACE-LG_E>
 }
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -LG_WALL_WIDTH>,
  <-LG_BRICK_WIDTH/2, -1.5*LG_BRICK_WIDTH, -LG_CORNER_SPACE>
 }
 box {
  <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
  <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>
  matrix <1, 0, 2/LG_BRICK_WIDTH*LG_CORNER_SPACE*sin(lg_angle*pi/180),
          0, 1, 0,
          -.8/.96, 0, 1,
          LG_CORNER_SPACE*(cos(lg_angle*pi/180)-1), 0, -LG_CORNER_SPACE>
 }
 cylinder {
  <LG_BRICK_WIDTH, 0, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
  <LG_BRICK_WIDTH, 0, -4*LG_PLATE_HEIGHT>,
  LG_KNOB_INNER_RADIUS
 }
}

#declare lg_4866_clear =
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   cylinder {
    <0, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+0.08>,
    LG_CORNER_SPACE
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH/2-LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <-LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE>
   }
   cylinder {
    <-LG_BRICK_WIDTH, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   torus {
    0.08-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+0.08>
   }
   intersection {
    difference {
     cylinder {
      <0, 0, 0>,
      <0, 0, -3*LG_PLATE_HEIGHT>,
      LG_BRICK_WIDTH/2
     }
     cylinder {
      <0, 0, LG_CORNER_SPACE+LG_E>,
      <0, 0, -4*LG_PLATE_HEIGHT>,
      LG_BRICK_WIDTH/2-LG_WALL_WIDTH
     }
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -4*LG_PLATE_HEIGHT>
    }
    matrix <1, 0, 2/LG_BRICK_WIDTH*LG_CORNER_SPACE*sin(lg_angle*pi/180),
            0, 1, 0,
            -.8/.96, 0, 1,
            LG_CORNER_SPACE*(cos(lg_angle*pi/180)-1), 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <0, 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH/2, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   intersection {
    torus {
     LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
     LG_CORNER_SPACE
     rotate <90, 0, 0>
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
     <0, 0, -LG_CORNER_SPACE-LG_E>
    }
    translate <LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH/2, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT>,
    LG_KNOB_INNER_RADIUS
   }
   intersection {
    difference {
     merge {
      cylinder {
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
       LG_BRICK_WIDTH/2
      }
      cylinder {
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>,
       <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT>,
       LG_BRICK_WIDTH/2-LG_CORNER_SPACE
      }
     }
     cylinder {
      <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>,
      <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT-LG_E>,
      LG_BRICK_WIDTH/2-LG_WALL_WIDTH
     }
    }
    box {
     <LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
     <1.5*LG_BRICK_WIDTH+LG_E, 2*LG_BRICK_WIDTH+LG_E, -4*LG_PLATE_HEIGHT-LG_E>
    }
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+0.08>,
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, -4*LG_PLATE_HEIGHT+0.08>,
    0.08-LG_CORNER_SPACE
   }
   cylinder {
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -4*LG_PLATE_HEIGHT+0.08>,
    <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+0.08>,
    0.08
   }
   box {
    <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_PLATE_HEIGHT>,
    <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH-LG_E, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
   }
   difference {
    merge {
     box {
      <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
      <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE-LG_E, -LG_CORNER_SPACE>
     }
     box {
      <LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -4*LG_PLATE_HEIGHT>,
      <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>
     }
    }
    union {
     box {
      <LG_BRICK_WIDTH+LG_E, LG_BRICK_WIDTH/2+LG_E, LG_CORNER_SPACE+LG_E>,
      <0, 0, -4*LG_PLATE_HEIGHT>
      matrix <1, 0, 2/LG_BRICK_WIDTH*LG_CORNER_SPACE*sin(lg_angle*pi/180),
              0, 1, 0,
              -.8/.96, 0, 1,
              LG_CORNER_SPACE*(cos(lg_angle*pi/180)-1), 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>
     }
     box {
      <-1.5*LG_BRICK_WIDTH-LG_E, 2*LG_BRICK_WIDTH+LG_E, -4*LG_PLATE_HEIGHT-LG_E>,
      <-1.5*LG_BRICK_WIDTH+0.08, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_E, -4*LG_PLATE_HEIGHT+0.08>
     }
    }
   }
   box {
    <-1.5*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE+LG_E, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -4*LG_PLATE_HEIGHT+0.08>
   }
   intersection {
    merge {
     cylinder {
      <0, 0, 0>,
      <0, 0, -LG_CORNER_SPACE-LG_E>,
      LG_BRICK_WIDTH/2-LG_CORNER_SPACE
     }
     cylinder {
      <0, 0, -LG_CORNER_SPACE>,
      <0, 0, -LG_WALL_WIDTH>,
      LG_BRICK_WIDTH/2
     }
    } 
    box {
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH/2-LG_E, LG_E>,
     <0, 0, -LG_WALL_WIDTH-LG_E>
    }
    translate <-LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH+0.12, 0>
   }
   intersection {
    merge {
     cylinder {
      <0, 0, 0>,
      <0, 0, -LG_CORNER_SPACE-LG_E>,
      LG_BRICK_WIDTH/2-LG_CORNER_SPACE
     }
     cylinder {
      <0, 0, -LG_CORNER_SPACE>,
      <0, 0, -LG_WALL_WIDTH>,
      LG_BRICK_WIDTH/2
     }
    } 
    box {
     <LG_BRICK_WIDTH/2-LG_E, LG_BRICK_WIDTH/2-LG_E, LG_E>,
     <0, 0, -LG_WALL_WIDTH-LG_E>
    }
    translate <0, 1.5*LG_BRICK_WIDTH, 0>
   }
   box {
    <0, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, 0>,
    <-LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <0, LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH>
   }
   box {
    <-1.5*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <0, 1.5*LG_BRICK_WIDTH+0.12, -LG_CORNER_SPACE-LG_E>
   }
   box {
    <-1.5*LG_BRICK_WIDTH, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <0, 1.5*LG_BRICK_WIDTH+0.12, -LG_WALL_WIDTH>
   }
   object {
    lg_tech_knob_logo_clear
    rotate <0, 0, 90>
    scale <1, 1-2*MIR, 1>
    translate <0, 1.5*LG_BRICK_WIDTH, 0>
   }
   object {
    lg_tech_knob_logo_clear
    rotate <0, 0, 90>
    scale <1, 1-2*MIR, 1>
    translate <-LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>
   }
   object {
    lg_tech_knob_logo_clear
    rotate <0, 0, 90>
    scale <1, 1-2*MIR, 1>
    translate <0, 0.5*LG_BRICK_WIDTH, 0>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 cylinder {
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH/2, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH/2, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH/2, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  <3*LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH/2, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH+0.12+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH-0.12-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 box {
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_E, -4*LG_PLATE_HEIGHT>,
  <LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -2*LG_BRICK_WIDTH+LG_WALL_WIDTH-LG_E, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>
 }
 box {
  <1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT>,
  <1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH, -1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>
 }
 box {
  <LG_BRICK_WIDTH/2, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH+LG_E, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -2*LG_BRICK_WIDTH+LG_WALL_WIDTH-LG_E, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 box {
  <1.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <1.5*LG_BRICK_WIDTH-LG_WALL_WIDTH, -1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 box {
  <1.5*LG_BRICK_WIDTH-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>,
  <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -1.5*LG_BRICK_WIDTH, -4*LG_PLATE_HEIGHT+LG_PLATE_INNER_HEIGHT>
 }
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -1.5*LG_BRICK_WIDTH, -LG_CORNER_SPACE-LG_E>
 }
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -LG_WALL_WIDTH>,
  <-LG_BRICK_WIDTH/2, -1.5*LG_BRICK_WIDTH, -LG_CORNER_SPACE>
 }
 box {
  <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
  <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -1.5*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>
  matrix <1, 0, 2/LG_BRICK_WIDTH*LG_CORNER_SPACE*sin(lg_angle*pi/180),
          0, 1, 0,
          -.8/.96, 0, 1,
          LG_CORNER_SPACE*(cos(lg_angle*pi/180)-1), 0, -LG_CORNER_SPACE>
 }
 cylinder {
  <LG_BRICK_WIDTH, 0, -3*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>,
  <LG_BRICK_WIDTH, 0, -4*LG_PLATE_HEIGHT>,
  LG_KNOB_INNER_RADIUS
 }
}

#end
