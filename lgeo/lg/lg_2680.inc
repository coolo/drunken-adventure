/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19990918 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_2680: Support 4 x 4 x 5 Stanchion                                        */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_2680)
#else
#declare lg_angle1=atan2(LG_BRICK_WIDTH/4, 13*LG_PLATE_HEIGHT);
#declare lg_2680 =
union {
 #declare ROT = 0;
 #while (ROT < 4)
  union {
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -15*LG_PLATE_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   object {
    lg_plate_cylinder
		translate <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT>
   }
   difference {
    box {
		 <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT-LG_E>
		}
		union {
     cylinder {
		  <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -14*LG_PLATE_HEIGHT>,
		  <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT>,
		  LG_KNOB_RADIUS+LG_CYLINDER_WALL_WIDTH/2
		 }
     cylinder {
		  <-LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT>,
		  <-LG_BRICK_WIDTH, LG_BRICK_WIDTH, -14*LG_PLATE_HEIGHT>,
		  LG_KNOB_RADIUS+LG_CYLINDER_WALL_WIDTH/2
		 }
		}
   }
   difference {
    union {
     cylinder {
	 	  <0, 0, LG_BRICK_WIDTH/2>,
		  <0, 0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E>,
		  LG_KNOB_RADIUS-LG_CORNER_SPACE
		 }
     cylinder {
	 	  <0, 0, -LG_E>,
		  <0, 0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>,
		  LG_KNOB_RADIUS
		 }
		}
		union {
     cylinder {
	 	  <0, 0, LG_BRICK_WIDTH/2+LG_E>,
		  <0, 0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>,
		  LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
		 }
     cylinder {
	 	  <0, 0, LG_BRICK_WIDTH/2>,
		  <0, 0, -2*LG_E>,
		  LG_KNOB_INNER_RADIUS
		 }
		}
		translate <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, 0>
   }
   torus {
    LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
		LG_CORNER_SPACE
		rotate <90, 0, 0>
		translate <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>
   }
   torus {
    LG_KNOB_RADIUS-LG_CORNER_SPACE,
		LG_CORNER_SPACE
		rotate <90, 0, 0>
		translate <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_E>,
		LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-2*LG_E>
   }
   rotate <0, 0, 90*ROT>
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  box {
   <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT>,
   <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
  }
  box {
   <LG_BRICK_WIDTH-LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT+LG_E>,
   <-LG_BRICK_WIDTH+LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT-LG_TOP_HEIGHT-LG_E>
  }
 }
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   union {
    cylinder {
		 <LG_BRICK_WIDTH/4-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_E>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <-LG_BRICK_WIDTH/4+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_E>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <LG_BRICK_WIDTH/4-LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <-LG_BRICK_WIDTH/4+LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		sphere {
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
		sphere {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		box {
		 <LG_BRICK_WIDTH/2, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_E>
		}
		box {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.1*LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT-LG_E>
		}
    difference {
     box {
		  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, LG_E>,
		  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE-LG_E>
		 }
		 union {
		  box {
		   <0, LG_E, 2*LG_E>,
		   <LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, -lg_angle1*180/pi, 0>
		   translate <LG_BRICK_WIDTH/4-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
		  box {
		   <0, LG_E, 2*LG_E>,
		   <-LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, lg_angle1*180/pi, 0>
		   translate <-LG_BRICK_WIDTH/4+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
  	 }
    }
    difference {
     box {
		  <LG_BRICK_WIDTH/2, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_E>,
		  <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH+LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE-LG_E>
		 }
		 union {
		  box {
		   <0, LG_E, 2*LG_E>,
		   <LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, -lg_angle1*180/pi, 0>
		   translate <LG_BRICK_WIDTH/4, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
		  box {
		   <0, LG_E, 2*LG_E>,
		   <-LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, lg_angle1*180/pi, 0>
		   translate <-LG_BRICK_WIDTH/4, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
  	 }
    }
    matrix <1, 0, 0, 0, 1, 0, 0, -0.4*LG_BRICK_WIDTH/(13.5*LG_PLATE_HEIGHT), 1, 0, -0.4*LG_BRICK_WIDTH, -LG_WALL_WIDTH>
   }
   union {
    box {
		 <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH, LG_E>,
		 <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 1.05*LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_E>
		}
    box {
		 <LG_WALL_WIDTH/2, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <-LG_WALL_WIDTH/2, 1.05*LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_E>
		}
    cylinder {
		 <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, -2*LG_WALL_WIDTH-LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -12*LG_PLATE_HEIGHT>
		}
		difference {
		 union {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, 0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -12*LG_PLATE_HEIGHT>
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, 2*LG_WALL_WIDTH+LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT>
		}
		difference {
		 union {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, -0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT>
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, -2*LG_WALL_WIDTH-LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -5*LG_PLATE_HEIGHT>
		}
		difference {
		 union {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, 0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -5*LG_PLATE_HEIGHT>
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, 2*LG_WALL_WIDTH+LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -7*LG_PLATE_HEIGHT>
		}
		difference {
		 union {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, -0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -7*LG_PLATE_HEIGHT>
		}
    matrix <1, 0, 0, 0, 1, 0, 0, -0.3*LG_BRICK_WIDTH/(13.5*LG_PLATE_HEIGHT), 1, 0, -0.3*LG_BRICK_WIDTH, -LG_WALL_WIDTH>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 intersection {
  box {
   <LG_BRICK_WIDTH-LG_WALL_WIDTH/2, LG_BRICK_WIDTH-LG_WALL_WIDTH/2, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
   <-LG_BRICK_WIDTH+LG_WALL_WIDTH/2, -LG_BRICK_WIDTH+LG_WALL_WIDTH/2, -15*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
  }
  union {
   difference {
    cylinder {
		 <0, 0, 0>,
		 <0, 0, -LG_PLATE_HEIGHT>,
		 LG_CYLINDER_RADIUS
		}
		cylinder {
		 <0, 0, LG_E>,
		 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
		 LG_KNOB_RADIUS
		}
		translate <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
   difference {
    cylinder {
		 <0, 0, 0>,
		 <0, 0, -LG_PLATE_HEIGHT>,
		 LG_CYLINDER_RADIUS
		}
		cylinder {
		 <0, 0, LG_E>,
		 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
		 LG_KNOB_RADIUS
		}
		translate <-LG_BRICK_WIDTH, LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
   difference {
    cylinder {
		 <0, 0, 0>,
		 <0, 0, -LG_PLATE_HEIGHT>,
		 LG_CYLINDER_RADIUS
		}
		cylinder {
		 <0, 0, LG_E>,
		 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
		 LG_KNOB_RADIUS
		}
		translate <LG_BRICK_WIDTH, -LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
   difference {
    cylinder {
		 <0, 0, 0>,
		 <0, 0, -LG_PLATE_HEIGHT>,
		 LG_CYLINDER_RADIUS
		}
		cylinder {
		 <0, 0, LG_E>,
		 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
		 LG_KNOB_RADIUS
		}
		translate <-LG_BRICK_WIDTH, -LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
  }
 }
 difference {
  object {
   lg_brick_cylinder
  }
  cylinder {
   <0, 0, 1.5*LG_PLATE_HEIGHT-LG_E>,
   <0, 0, 1>,
   0.4
  }
  translate <0, 0, -15*LG_PLATE_HEIGHT>
 }
 union {
  box {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_E>
  }
  box {
   <LG_WALL_WIDTH/2, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2, -LG_BRICK_WIDTH, -LG_E>
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  scale <1, 0.5, 1>
  translate <0, 0, -13.5*LG_PLATE_HEIGHT>
 }
 union {
  box {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_E>
  }
  box {
   <LG_WALL_WIDTH/2, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2, -LG_BRICK_WIDTH, -LG_E>
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  scale <1, 0.3, -1>
  translate <0, 0, -0.5*LG_PLATE_HEIGHT>
 }
 union {
  box {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH>
  }
  box {
   <LG_WALL_WIDTH/2, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  scale <1, 0.5, 1>
  translate <0, 0, -6.5*LG_PLATE_HEIGHT>
 }
 box {
  <LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>
 }
 box {
  <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>
 }
 box {
  <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
  <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH>
 }
 box {
  <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
  <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT>
  translate <0, 0, -13.5*LG_PLATE_HEIGHT>
 }
}

#declare lg_2680_clear =
merge {
 #declare ROT = 0;
 #while (ROT < 4)
  merge {
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -15*LG_PLATE_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   object {
    lg_plate_cylinder
		translate <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT>
   }
   difference {
    box {
		 <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT-LG_E>
		}
		union {
     cylinder {
		  <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -14*LG_PLATE_HEIGHT>,
		  <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT>,
		  LG_KNOB_RADIUS+LG_CYLINDER_WALL_WIDTH/2
		 }
     cylinder {
		  <-LG_BRICK_WIDTH, LG_BRICK_WIDTH, -15*LG_PLATE_HEIGHT>,
		  <-LG_BRICK_WIDTH, LG_BRICK_WIDTH, -14*LG_PLATE_HEIGHT>,
		  LG_KNOB_RADIUS+LG_CYLINDER_WALL_WIDTH/2
		 }
		}
   }
   difference {
    merge {
     cylinder {
	 	  <0, 0, LG_BRICK_WIDTH/2>,
		  <0, 0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E>,
		  LG_KNOB_RADIUS-LG_CORNER_SPACE
		 }
     cylinder {
	 	  <0, 0, -LG_E>,
		  <0, 0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>,
		  LG_KNOB_RADIUS
		 }
		}
		union {
     cylinder {
	 	  <0, 0, LG_BRICK_WIDTH/2+LG_E>,
		  <0, 0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>,
		  LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE
		 }
     cylinder {
	 	  <0, 0, LG_BRICK_WIDTH/2>,
		  <0, 0, -2*LG_E>,
		  LG_KNOB_INNER_RADIUS
		 }
		}
		translate <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, 0>
   }
   torus {
    LG_KNOB_INNER_RADIUS+LG_CORNER_SPACE,
		LG_CORNER_SPACE
		rotate <90, 0, 0>
		translate <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>
   }
   torus {
    LG_KNOB_RADIUS-LG_CORNER_SPACE,
		LG_CORNER_SPACE
		rotate <90, 0, 0>
		translate <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2-LG_CORNER_SPACE>
   }
   sphere {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_E>,
		LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-2*LG_E>
   }
   rotate <0, 0, 90*ROT>
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  box {
   <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT>,
   <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
  }
  box {
   <LG_BRICK_WIDTH-LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT+LG_E>,
   <-LG_BRICK_WIDTH+LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_WALL_WIDTH, -14*LG_PLATE_HEIGHT-LG_TOP_HEIGHT-LG_E>
  }
 }
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   merge {
    cylinder {
		 <LG_BRICK_WIDTH/4-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_E>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <-LG_BRICK_WIDTH/4+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_E>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <LG_BRICK_WIDTH/4-LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <-LG_BRICK_WIDTH/4+LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		sphere {
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
		sphere {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		cylinder {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 LG_CORNER_SPACE
		}
		box {
		 <LG_BRICK_WIDTH/2, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -13.5*LG_PLATE_HEIGHT-LG_E>
		}
		box {
		 <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
		 <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 1.1*LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT-LG_E>
		}
    difference {
     box {
		  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, LG_E>,
		  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_CORNER_SPACE-LG_E>
		 }
		 union {
		  box {
		   <0, LG_E, 2*LG_E>,
		   <LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, -lg_angle1*180/pi, 0>
		   translate <LG_BRICK_WIDTH/4-LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
		  box {
		   <0, LG_E, 2*LG_E>,
		   <-LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, lg_angle1*180/pi, 0>
		   translate <-LG_BRICK_WIDTH/4+LG_CORNER_SPACE, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
  	 }
    }
    difference {
     box {
		  <LG_BRICK_WIDTH/2, 1.2*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_E>,
		  <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH+LG_CORNER_SPACE, -14*LG_PLATE_HEIGHT-LG_CORNER_SPACE-LG_E>
		 }
		 union {
		  box {
		   <0, LG_E, 2*LG_E>,
		   <LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, -lg_angle1*180/pi, 0>
		   translate <LG_BRICK_WIDTH/4, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
		  box {
		   <0, LG_E, 2*LG_E>,
		   <-LG_BRICK_WIDTH, -0.2, -14*LG_PLATE_HEIGHT/cos(lg_angle1)>
		   rotate <0, lg_angle1*180/pi, 0>
		   translate <-LG_BRICK_WIDTH/4, 1.2*LG_BRICK_WIDTH, 0>
	 	  }
  	 }
    }
    matrix <1, 0, 0, 0, 1, 0, 0, -0.4*LG_BRICK_WIDTH/(13.5*LG_PLATE_HEIGHT), 1, 0, -0.4*LG_BRICK_WIDTH, -LG_WALL_WIDTH>
   }
   merge {
    box {
	 <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH, LG_E>,
	 <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 1.05*LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_E>
	}
    box {
		 <LG_WALL_WIDTH/2, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <-LG_WALL_WIDTH/2, 1.05*LG_BRICK_WIDTH, -13*LG_PLATE_HEIGHT-LG_E>
		}
    cylinder {
		 <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
    cylinder {
		 <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, LG_E>,
		 <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0.7*LG_BRICK_WIDTH+LG_CORNER_SPACE, -13*LG_PLATE_HEIGHT-LG_E>,
		 LG_CORNER_SPACE
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, -2*LG_WALL_WIDTH-LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -12*LG_PLATE_HEIGHT>
		}
		difference {
		 merge {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, 0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -12*LG_PLATE_HEIGHT>
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, 2*LG_WALL_WIDTH+LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT>
		}
		difference {
		 merge {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, -0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT>
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, -2*LG_WALL_WIDTH-LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -5*LG_PLATE_HEIGHT>
		}
		difference {
		 merge {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, 0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -5*LG_PLATE_HEIGHT>
		}
		difference {
		 box {
		  <LG_WALL_WIDTH/2, 0, 0>,
		  <-LG_WALL_WIDTH/2, LG_WALL_WIDTH+LG_CORNER_SPACE+LG_E, 2*LG_WALL_WIDTH+LG_E>
		 }
		 union {
		  cylinder {
		   <0.1, 0, 0>,
		   <-0.1, 0, 0>,
		   LG_WALL_WIDTH
		  }
		  cylinder {
		   <0.1, 0, 0>,
		   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		  cylinder {
		   <-0.1, 0, 0>,
		   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
		   LG_WALL_WIDTH+LG_CORNER_SPACE
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -7*LG_PLATE_HEIGHT>
		}
		difference {
		 merge {
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <LG_WALL_WIDTH/2-LG_CORNER_SPACE, 0, 0>
		  }
		  torus {
		   LG_WALL_WIDTH+LG_CORNER_SPACE,
		   LG_CORNER_SPACE
		   rotate <0, 0, 90>
		   translate <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, 0, 0>
		  }
		 }
		 union {
		  box {
		   <0.1, 0, -0.25>,
		   <-0.1, -0.25, 0.25>
		  }
		  box {
		   <0.1, -LG_E, 0>,
		   <-0.1, 0.25, -0.25>
		  }
		 }
		 translate <0, LG_BRICK_WIDTH/2, -7*LG_PLATE_HEIGHT>
		}
    matrix <1, 0, 0, 0, 1, 0, 0, -0.3*LG_BRICK_WIDTH/(13.5*LG_PLATE_HEIGHT), 1, 0, -0.3*LG_BRICK_WIDTH, -LG_WALL_WIDTH>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 intersection {
  box {
   <LG_BRICK_WIDTH-LG_WALL_WIDTH/2, LG_BRICK_WIDTH-LG_WALL_WIDTH/2, -13.5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
   <-LG_BRICK_WIDTH+LG_WALL_WIDTH/2, -LG_BRICK_WIDTH+LG_WALL_WIDTH/2, -15*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
  }
  merge {
   difference {
    cylinder {
		 <0, 0, 0>,
		 <0, 0, -LG_PLATE_HEIGHT>,
		 LG_CYLINDER_RADIUS
		}
		cylinder {
		 <0, 0, LG_E>,
		 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
		 LG_KNOB_RADIUS
		}
		translate <LG_BRICK_WIDTH, LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
   difference {
    cylinder {
	 <0, 0, 0>,
	 <0, 0, -LG_PLATE_HEIGHT>,
	 LG_CYLINDER_RADIUS
	}
	cylinder {
	 <0, 0, LG_E>,
	 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
	 LG_KNOB_RADIUS
	}
	translate <-LG_BRICK_WIDTH, LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
   difference {
    cylinder {
	 <0, 0, 0>,
	 <0, 0, -LG_PLATE_HEIGHT>,
	 LG_CYLINDER_RADIUS
	}
	cylinder {
	 <0, 0, LG_E>,
	 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
	 LG_KNOB_RADIUS
	}
	translate <LG_BRICK_WIDTH, -LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
   difference {
    cylinder {
		 <0, 0, 0>,
		 <0, 0, -LG_PLATE_HEIGHT>,
		 LG_CYLINDER_RADIUS
		}
		cylinder {
		 <0, 0, LG_E>,
		 <0, 0, -LG_PLATE_HEIGHT-LG_E>,
		 LG_KNOB_RADIUS
		}
		translate <-LG_BRICK_WIDTH, -LG_BRICK_WIDTH, -13.5*LG_PLATE_HEIGHT>
   }
  }
 }
 difference {
  object {
   lg_brick_cylinder
  }
  cylinder {
   <0, 0, 1.5*LG_PLATE_HEIGHT-LG_E>,
   <0, 0, 1>,
   0.4
  }
  translate <0, 0, -15*LG_PLATE_HEIGHT>
 }
 merge {
  box {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_E>
  }
  box {
   <LG_WALL_WIDTH/2, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2, -LG_BRICK_WIDTH, -LG_E>
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  scale <1, 0.5, 1>
  translate <0, 0, -13.5*LG_PLATE_HEIGHT>
 }
 merge {
  box {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_E>
  }
  box {
   <LG_WALL_WIDTH/2, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2, -LG_BRICK_WIDTH, -LG_E>
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  scale <1, 0.3, -1>
  translate <0, 0, -0.5*LG_PLATE_HEIGHT>
 }
 merge {
  box {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH>
  }
  box {
   <LG_WALL_WIDTH/2, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, LG_WALL_WIDTH-LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   <LG_WALL_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  cylinder {
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   <-LG_WALL_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>,
   LG_CORNER_SPACE
  }
  scale <1, 0.5, 1>
  translate <0, 0, -6.5*LG_PLATE_HEIGHT>
 }
 box {
  <LG_BRICK_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH+LG_CORNER_SPACE>
 }
 box {
  <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH, -LG_WALL_WIDTH+LG_CORNER_SPACE>
 }
 box {
  <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
  <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_WALL_WIDTH>
 }
 box {
  <LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
  <-LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT>
  translate <0, 0, -13.5*LG_PLATE_HEIGHT>
 }
}

#end
