/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19980630 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_3743: Technic Gear Rack 1 x 4                                            */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_3743)
#else
#declare LENGTH = 1;
#declare WIDTH = 4;
#declare lg_3743 = 
union {
 #declare ROT = 0;
 #while (ROT < 2)
  union {
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   #if (ROT=1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end 
 difference {
  union {
   box {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   box {
    <LENGTH/2*LG_BRICK_WIDTH, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
  }
  box {
   <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_TOP_HEIGHT>,
   <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -LG_PLATE_HEIGHT-LG_E>
  }
 }
 cylinder {
  <0, -LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>,
  <0, -LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_E>,
  LG_KNOB_INNER_RADIUS
 }
 cylinder {
  <0, 0, -LG_PLATE_HEIGHT>,
  <0, 0, -LG_TOP_HEIGHT+LG_E>,
  LG_KNOB_INNER_RADIUS
 }
 cylinder {
  <0, LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>,
  <0, LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_E>,
  LG_KNOB_INNER_RADIUS
 }
 #declare TOOTH = -1.8;
 #while (TOOTH < 2)
  union {
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.2>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   union {
    cylinder {
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    cylinder {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_CORNER_SPACE, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_E, -0.32>
    }
    rotate <180*atan2(0.08,0.24)/pi, 0, 0>
    translate <0, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
   }
   union {
    cylinder {
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    cylinder {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_CORNER_SPACE, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_E, -0.32>
    }
    rotate <-180*atan2(0.08,0.24)/pi, 0, 0>
    translate <0, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
   }
   difference {
    box {
     <LG_BRICK_WIDTH/2, LG_WALL_WIDTH, 0.24-LG_CORNER_SPACE>,
     <-LG_BRICK_WIDTH/2, -LG_WALL_WIDTH, -LG_CORNER_SPACE-LG_E>
    }
    union {
     box {
      <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_WALL_WIDTH, LG_E>,
      <-LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.5>
      rotate <-180*atan2(0.08,0.24)/pi, 0, 0>
      translate <0, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
     }
     box {
      <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_WALL_WIDTH, LG_E>,
      <-LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.5>
      rotate <180*atan2(0.08,0.24)/pi, 0, 0>
      translate <0, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
     }
    }
   }
   translate <0, TOOTH*LG_BRICK_WIDTH, 0>
  }
  #declare TOOTH = TOOTH +0.4;
 #end
} 

#declare lg_3743_clear = 
merge {
 #declare ROT = 0;
 #while (ROT < 2)
  merge {
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   #if (ROT=1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end 
 difference {
  merge {
   box {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT>
   }
   box {
    <LENGTH/2*LG_BRICK_WIDTH, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   box {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
  }
  box {
   <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_TOP_HEIGHT>,
   <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -LG_PLATE_HEIGHT-LG_E>
  }
 }
 cylinder {
  <0, -LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>,
  <0, -LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_E>,
  LG_KNOB_INNER_RADIUS
 }
 cylinder {
  <0, 0, -LG_PLATE_HEIGHT>,
  <0, 0, -LG_TOP_HEIGHT+LG_E>,
  LG_KNOB_INNER_RADIUS
 }
 cylinder {
  <0, LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>,
  <0, LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_E>,
  LG_KNOB_INNER_RADIUS
 }
 #declare TOOTH = -1.8;
 #while (TOOTH < 2)
  merge {
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.2>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   merge {
    cylinder {
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    cylinder {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_CORNER_SPACE, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_E, -0.32>
    }
    rotate <180*atan2(0.08,0.24)/pi, 0, 0>
    translate <0, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
   }
   merge {
    cylinder {
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    cylinder {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, 0>,
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.32>,
     LG_CORNER_SPACE
    }
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_CORNER_SPACE, 0>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_E, -0.32>
    }
    rotate <-180*atan2(0.08,0.24)/pi, 0, 0>
    translate <0, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
   }
   difference {
    box {
     <LG_BRICK_WIDTH/2, LG_WALL_WIDTH, 0.24-LG_CORNER_SPACE>,
     <-LG_BRICK_WIDTH/2, -LG_WALL_WIDTH, -LG_CORNER_SPACE-LG_E>
    }
    union {
     box {
      <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_WALL_WIDTH, LG_E>,
      <-LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.5>
      rotate <-180*atan2(0.08,0.24)/pi, 0, 0>
      translate <0, -0.04+LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
     }
     box {
      <LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_WALL_WIDTH, LG_E>,
      <-LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -0.5>
      rotate <180*atan2(0.08,0.24)/pi, 0, 0>
      translate <0, 0.04-LG_CORNER_SPACE, 0.24-LG_CORNER_SPACE>
     }
    }
   }
   translate <0, TOOTH*LG_BRICK_WIDTH, 0>
  }
  #declare TOOTH = TOOTH +0.4;
 #end
} 

#end
