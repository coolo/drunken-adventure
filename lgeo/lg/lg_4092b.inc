/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19980313 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_4092b: Train Bogie Plate with short pin                                  */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_4092b)
#else
#declare lg_angle=atan2(0.04, 0.4);
#declare lg_4092b =
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <2*LG_BRICK_WIDTH-0.04, 3*LG_BRICK_WIDTH-0.04, -LG_PLATE_HEIGHT+0.04+LG_E>,
    <-2*LG_BRICK_WIDTH+0.04, 3*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE+LG_E>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT+0.04>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_WALL_WIDTH, -0.04-LG_CORNER_SPACE>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 cylinder {
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 box {
  <-2*LG_BRICK_WIDTH+0.04, 3*LG_BRICK_WIDTH-0.04, -LG_PLATE_HEIGHT+0.04+LG_E>,
  <-2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+0.04, -LG_PLATE_HEIGHT>
 }
 box {
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE+LG_E>,
  <-2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04>
 }
 box {
  <-2*LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <-2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>
 }
 box {
  <2*LG_BRICK_WIDTH-0.04, 3*LG_BRICK_WIDTH-0.04, -LG_PLATE_HEIGHT+0.04+LG_E>,
  <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+0.04, -LG_PLATE_HEIGHT>
 }
 box {
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE+LG_E>,
  <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04>
 }
 box {
  <2*LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>
 }
 #declare CYL = -2;
 #while (CYL <3)
  object {
   lg_plate_cylinder
   translate <LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>
  }
  object {
   lg_plate_cylinder
   translate <0, CYL*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>
  }
  object {
   lg_plate_cylinder
   translate <-LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>
  }
  #declare CYL = CYL + 1;
 #end
 difference {
  box {
   <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
   <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT>
  }
  union {
   cylinder {
    <0, 0, LG_E>,
    <0, 0, -LG_TOP_HEIGHT-LG_E>,
    LG_WALL_WIDTH
   }
   box {
    <LG_E, 3*LG_BRICK_WIDTH, 0>,
    <-LG_BRICK_WIDTH, -3*LG_BRICK_WIDTH, 0.1>
    rotate <0, lg_angle*180/pi, 0>
    translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -0.04>
   }
   box {
    <-LG_E, 3*LG_BRICK_WIDTH, 0>,
    <LG_BRICK_WIDTH, -3*LG_BRICK_WIDTH, 0.1>
    rotate <0, -lg_angle*180/pi, 0>
    translate <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0, -0.04>
   }
   box {
    <2*LG_BRICK_WIDTH, -LG_E, 0>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH, 0.1>
    rotate <lg_angle*180/pi, 0, 0>
    translate <0, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04>
   }
   box {
    <2*LG_BRICK_WIDTH, LG_E, 0>,
    <-2*LG_BRICK_WIDTH, -LG_BRICK_WIDTH, 0.1>
    rotate <-lg_angle*180/pi, 0, 0>
    translate <0, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04>
   }
  }
 }
 difference {
  union {
   torus {
    2*LG_KNOB_RADIUS,
    0.04
    scale <1/2, 1, 1/2>
    translate <0, 0.56-0.04, 0>
   }
   cylinder {
    <0, 0.56, 0>,
    <0, -LG_E, 0>,
    LG_KNOB_RADIUS
   }
  }
  union {
   cylinder {
    <0, 0.56+LG_E, 0>,
    <0, -2*LG_E, 0>,
    LG_KNOB_INNER_RADIUS
   }
   cylinder {
    <LG_KNOB_RADIUS+LG_E, 0.36, 0>,
    <-LG_KNOB_RADIUS-LG_E, 0.36, 0>,
    0.04
   }
   box {
    <LG_CYLINDER_RADIUS, 0.36, 0.04>,
    <-LG_CYLINDER_RADIUS, 0.56+LG_E, -0.04>
   }
  }
  matrix <1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0>
 }
}

#declare lg_4092b_clear =
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <2*LG_BRICK_WIDTH-0.04, 3*LG_BRICK_WIDTH-0.04, -LG_PLATE_HEIGHT+0.04+LG_E>,
    <-2*LG_BRICK_WIDTH+0.04, 3*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE+LG_E>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_WALL_WIDTH, -LG_PLATE_HEIGHT+0.04>
   }
   box {
    <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_WALL_WIDTH, -0.04-LG_CORNER_SPACE>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 cylinder {
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 box {
  <-2*LG_BRICK_WIDTH+0.04, 3*LG_BRICK_WIDTH-0.04, -LG_PLATE_HEIGHT+0.04+LG_E>,
  <-2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+0.04, -LG_PLATE_HEIGHT>
 }
 box {
  <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE+LG_E>,
  <-2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04>
 }
 box {
  <-2*LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <-2*LG_BRICK_WIDTH+LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>
 }
 box {
  <2*LG_BRICK_WIDTH-0.04, 3*LG_BRICK_WIDTH-0.04, -LG_PLATE_HEIGHT+0.04+LG_E>,
  <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+0.04, -LG_PLATE_HEIGHT>
 }
 box {
  <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE+LG_E>,
  <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04>
 }
 box {
  <2*LG_BRICK_WIDTH, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+0.04+LG_CORNER_SPACE>,
  <2*LG_BRICK_WIDTH-LG_WALL_WIDTH, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04-LG_CORNER_SPACE>
 }
 #declare CYL = -2;
 #while (CYL <3)
  object {
   lg_plate_cylinder_clear
   translate <LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>
  }
  object {
   lg_plate_cylinder_clear
   translate <0, CYL*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>
  }
  object {
   lg_plate_cylinder_clear
   translate <-LG_BRICK_WIDTH, CYL*LG_BRICK_WIDTH, -LG_PLATE_HEIGHT>
  }
  #declare CYL = CYL + 1;
 #end
 difference {
  box {
   <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
   <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT>
  }
  union {
   cylinder {
    <0, 0, LG_E>,
    <0, 0, -LG_TOP_HEIGHT-LG_E>,
    LG_WALL_WIDTH
   }
   box {
    <LG_E, 3*LG_BRICK_WIDTH, 0>,
    <-LG_BRICK_WIDTH, -3*LG_BRICK_WIDTH, 0.1>
    rotate <0, lg_angle*180/pi, 0>
    translate <2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, -0.04>
   }
   box {
    <-LG_E, 3*LG_BRICK_WIDTH, 0>,
    <LG_BRICK_WIDTH, -3*LG_BRICK_WIDTH, 0.1>
    rotate <0, -lg_angle*180/pi, 0>
    translate <-2*LG_BRICK_WIDTH+LG_CORNER_SPACE, 0, -0.04>
   }
   box {
    <2*LG_BRICK_WIDTH, -LG_E, 0>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH, 0.1>
    rotate <lg_angle*180/pi, 0, 0>
    translate <0, -3*LG_BRICK_WIDTH+LG_CORNER_SPACE, -0.04>
   }
   box {
    <2*LG_BRICK_WIDTH, LG_E, 0>,
    <-2*LG_BRICK_WIDTH, -LG_BRICK_WIDTH, 0.1>
    rotate <-lg_angle*180/pi, 0, 0>
    translate <0, 3*LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.04>
   }
  }
 }
 difference {
  merge {
   torus {
    2*LG_KNOB_RADIUS,
    0.04
    scale <1/2, 1, 1/2>
    translate <0, 0.56-0.04, 0>
   }
   cylinder {
    <0, 0.56, 0>,
    <0, -LG_E, 0>,
    LG_KNOB_RADIUS
   }
  }
  union {
   cylinder {
    <0, 0.56+LG_E, 0>,
    <0, -2*LG_E, 0>,
    LG_KNOB_INNER_RADIUS
   }
   cylinder {
    <LG_KNOB_RADIUS+LG_E, 0.36, 0>,
    <-LG_KNOB_RADIUS-LG_E, 0.36, 0>,
    0.04
   }
   box {
    <LG_CYLINDER_RADIUS, 0.36, 0.04>,
    <-LG_CYLINDER_RADIUS, 0.56+LG_E, -0.04>
   }
  }
  matrix <1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0>
 }
}

#end
