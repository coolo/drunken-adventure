/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19980204 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_4261: Technic Steering Arm                                               */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_4261)
#else
#declare lg_4261 =
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   torus {
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>
   }
   torus {
    0.3+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE+LG_E, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, -LG_CORNER_SPACE>
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    LG_CORNER_SPACE
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 difference {
  union {
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_BRICK_HEIGHT>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <0, 0, -LG_CORNER_SPACE>,
    <0, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_BRICK_WIDTH/2
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    LG_BRICK_WIDTH/2
   }
   box {
    <0, LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>
   }
   box {
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0>,
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>
   }
  }
  union {
   cylinder {
    <0, LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, LG_BRICK_WIDTH/2-0.08, -LG_BRICK_WIDTH/2>,
    0.3
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2+LG_E, -LG_BRICK_WIDTH/2>,
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    0.3+LG_CORNER_SPACE
   }
   cylinder {
    <0, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2+0.08, -LG_BRICK_WIDTH/2>,
    0.3
   }
   cylinder {
    <0, -LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    0.3+LG_CORNER_SPACE
   }
  }
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_CORNER_SPACE>
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
 }
 #declare ROT = 0;
 #while (ROT < 4)
  union {
   cylinder { 
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    0.08
   }
   cylinder { 
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, 0>,
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT>,
    0.08-LG_CORNER_SPACE
   }
   torus {
    0.08-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, >
    translate <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>
   }
   torus {
    0.08-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, >
    translate <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_KNOB_RADIUS, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_KNOB_RADIUS, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, 0>,
    <LG_KNOB_RADIUS, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2, -LG_CORNER_SPACE>,
    <LG_KNOB_RADIUS, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE+LG_E, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_KNOB_RADIUS, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_CROSSAXLE_WIDTH/2+0.08, 0>,
    <LG_KNOB_RADIUS, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_CROSSAXLE_WIDTH/2, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE+LG_E, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   rotate <0, 0, 90*ROT>
   translate <-2*LG_BRICK_WIDTH, 0, 0>
  }
  #declare ROT = ROT + 1;
 #end
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>
 }
 difference {
  union {
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE+LG_E, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_PLATE_HEIGHT>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0>
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, 0>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_BRICK_WIDTH/2
   }
  }
  union {
   box {
    <-LG_BRICK_WIDTH/2-LG_WALL_WIDTH, LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_TOP_HEIGHT>,
    <-1.5*LG_BRICK_WIDTH, -LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -LG_PLATE_HEIGHT-LG_E>
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, 0>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, 0, LG_E>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT-LG_E>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
  }
 }
 box {
  <-1.5*LG_BRICK_WIDTH-LG_E, 0.06, -LG_CORNER_SPACE>,
  <-1.5*LG_BRICK_WIDTH+LG_WALL_WIDTH, -0.06, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 #declare MIR = 0;
 #while (MIR < 2)
  difference {
   union {
    cylinder {
     <0, 0, -LG_E>,
     <0, 0, LG_BRICK_WIDTH/2>,
     LG_KNOB_RADIUS
    }
    torus {
     2*LG_KNOB_RADIUS,
     0.04
     scale <1/2, 1, 1/2>
     rotate <90, 0, 9>
     translate <0, 0, LG_BRICK_WIDTH/2-0.04>
    }
   }
   union {
    cylinder {
     <0, 0, -2*LG_E>,
     <0, 0, LG_BRICK_WIDTH/2+LG_E>,
     LG_KNOB_INNER_RADIUS
    }
    cylinder {
     <0, LG_BRICK_WIDTH/2, 0.12>,
     <0, -LG_BRICK_WIDTH/2, 0.12>,
     0.04
    }
    box {
     <0.04, LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2+LG_E>,
     <-0.04, -LG_BRICK_WIDTH/2, 0.12>
    }
   }
   #if (MIR=1)
    matrix <1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, -LG_BRICK_HEIGHT>
   #end
  }
  #declare MIR = MIR + 1;
 #end
}

#declare lg_4261_clear =
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   torus {
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>
   }
   torus {
    0.3+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    translate <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE+LG_E, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, -LG_CORNER_SPACE>
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    LG_CORNER_SPACE
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 difference {
  merge {
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_BRICK_HEIGHT>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <0, 0, -LG_CORNER_SPACE>,
    <0, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>,
    LG_BRICK_WIDTH/2
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    LG_BRICK_WIDTH/2
   }
   box {
    <0, LG_BRICK_WIDTH/2, -LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>
   }
   box {
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0>,
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>
   }
  }
  union {
   cylinder {
    <0, LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, LG_BRICK_WIDTH/2-0.08, -LG_BRICK_WIDTH/2>,
    0.3
   }
   cylinder {
    <0, LG_BRICK_WIDTH/2+LG_E, -LG_BRICK_WIDTH/2>,
    <0, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    0.3+LG_CORNER_SPACE
   }
   cylinder {
    <0, -LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2+0.08, -LG_BRICK_WIDTH/2>,
    0.3
   }
   cylinder {
    <0, -LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH/2>,
    <0, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2>,
    0.3+LG_CORNER_SPACE
   }
  }
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_CORNER_SPACE>
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_BRICK_HEIGHT+LG_CORNER_SPACE>
 }
 #declare ROT = 0;
 #while (ROT < 4)
  merge {
   cylinder { 
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    0.08
   }
   cylinder { 
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, 0>,
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT>,
    0.08-LG_CORNER_SPACE
   }
   torus {
    0.08-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, >
    translate <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>
   }
   torus {
    0.08-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, >
    translate <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LG_KNOB_RADIUS, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_KNOB_RADIUS, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, 0>,
    <LG_KNOB_RADIUS, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_CROSSAXLE_WIDTH/2+0.08, LG_CROSSAXLE_WIDTH/2, -LG_CORNER_SPACE>,
    <LG_KNOB_RADIUS, LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE+LG_E, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_KNOB_RADIUS, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_CROSSAXLE_WIDTH/2+0.08, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE, LG_CROSSAXLE_WIDTH/2+0.08, 0>,
    <LG_KNOB_RADIUS, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT>
   }
   box {
    <LG_CROSSAXLE_WIDTH/2, LG_CROSSAXLE_WIDTH/2+0.08, -LG_CORNER_SPACE>,
    <LG_CROSSAXLE_WIDTH/2+LG_CORNER_SPACE+LG_E, LG_KNOB_RADIUS, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   rotate <0, 0, 90*ROT>
   translate <-2*LG_BRICK_WIDTH, 0, 0>
  }
  #declare ROT = ROT + 1;
 #end
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>
 }
 difference {
  merge {
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE+LG_E, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_PLATE_HEIGHT>,
    <-2*LG_BRICK_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0>
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, 0>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_BRICK_WIDTH/2
   }
  }
  union {
   box {
    <-LG_BRICK_WIDTH/2-LG_WALL_WIDTH, LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_TOP_HEIGHT>,
    <-1.5*LG_BRICK_WIDTH, -LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -LG_PLATE_HEIGHT-LG_E>
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, 0>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT>,
    LG_KNOB_RADIUS
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, -LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, 0, LG_E>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-2*LG_BRICK_WIDTH, 0, -LG_PLATE_HEIGHT-LG_E>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
  }
 }
 box {
  <-1.5*LG_BRICK_WIDTH-LG_E, 0.06, -LG_CORNER_SPACE>,
  <-1.5*LG_BRICK_WIDTH+LG_WALL_WIDTH, -0.06, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
 }
 #declare MIR = 0;
 #while (MIR < 2)
  difference {
   merge {
    cylinder {
     <0, 0, -LG_E>,
     <0, 0, LG_BRICK_WIDTH/2>,
     LG_KNOB_RADIUS
    }
    torus {
     2*LG_KNOB_RADIUS,
     0.04
     scale <1/2, 1, 1/2>
     rotate <90, 0, 9>
     translate <0, 0, LG_BRICK_WIDTH/2-0.04>
    }
   }
   union {
    cylinder {
     <0, 0, -2*LG_E>,
     <0, 0, LG_BRICK_WIDTH/2+LG_E>,
     LG_KNOB_INNER_RADIUS
    }
    cylinder {
     <0, LG_BRICK_WIDTH/2, 0.12>,
     <0, -LG_BRICK_WIDTH/2, 0.12>,
     0.04
    }
    box {
     <0.04, LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2+LG_E>,
     <-0.04, -LG_BRICK_WIDTH/2, 0.12>
    }
   }
   #if (MIR=1)
    matrix <1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, -LG_BRICK_HEIGHT>
   #end
  }
  #declare MIR = MIR + 1;
 #end
}

#end
