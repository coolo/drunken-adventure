/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 20080602 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_50746: Slope Tile 30 1 x 1 x 2/3                                         */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_50746)
#else
#declare lg_angle = atan2(LG_BRICK_WIDTH, 1.5*LG_PLATE_HEIGHT);
#declare lg_50746 = 
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_WALL_WIDTH, 0.04+LG_CORNER_SPACE+LG_E>
   }
   difference {
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_WALL_WIDTH, 0.04+LG_CORNER_SPACE>
    }
    box {
     <0, 0, 0>,
     <-(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/sin(lg_angle), LG_BRICK_WIDTH/2+LG_E, 2*LG_PLATE_HEIGHT>
     rotate <0, 90-lg_angle*180/pi, 0>
     translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
    }
   }
   #if (MIR = 1)
    scale <1, -1, 1>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 cylinder {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 difference {
  box {
   <LG_BRICK_WIDTH/2-0.04, LG_BRICK_WIDTH/2-0.04, 0>,
   <-LG_BRICK_WIDTH/2+0.04, -LG_BRICK_WIDTH/2+0.04, 0.04+LG_E>
  }
  box {
   <LG_KNOB_RADIUS, LG_KNOB_RADIUS, -LG_E>,
   <-LG_KNOB_RADIUS, -LG_KNOB_RADIUS, 0.1>
  }
 }
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
 }
 box {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04>,
  <-LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE+LG_E>
 }
 difference {
  union {
   box {
    <-LG_BRICK_WIDTH/2+LG_WALL_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 2*LG_PLATE_HEIGHT-2*LG_CORNER_SPACE/sin(lg_angle)>,
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT>
   }
  }
  box {
   <0, -LG_BRICK_WIDTH/2-LG_E, 0>,
   <-(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/sin(lg_angle), LG_BRICK_WIDTH/2+LG_E, 2*LG_PLATE_HEIGHT>
   rotate <0, 90-lg_angle*180/pi, 0>
   translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
  }
 }
 difference {
  box {
   <0, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_CORNER_SPACE>,
   <-(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/sin(lg_angle), LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>
   rotate <0, 90-lg_angle*180/pi, 0>
   translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
  }
  union  {
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2+LG_E, 2*LG_PLATE_HEIGHT+LG_E>,
    <-LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH/2-LG_E, LG_PLATE_HEIGHT>
   }
   cylinder {
    <0, 0, 0>,
    <0, 0, LG_KNOB_HEIGHT+LG_E>,
    LG_KNOB_RADIUS
   }
  }
 }
}

#declare lg_50746_clear = 
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_WALL_WIDTH, 0.04+LG_CORNER_SPACE+LG_E>
   }
   difference {
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
     <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_WALL_WIDTH, 0.04+LG_CORNER_SPACE>
    }
    box {
     <0, 0, 0>,
     <-(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/sin(lg_angle), LG_BRICK_WIDTH/2+LG_E, 2*LG_PLATE_HEIGHT>
     rotate <0, 90-lg_angle*180/pi, 0>
     translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
    }
   }
   #if (MIR = 1)
    scale <1, -1, 1>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 cylinder {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT/2+(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/tan(lg_angle)-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 difference {
  box {
   <LG_BRICK_WIDTH/2-0.04, LG_BRICK_WIDTH/2-0.04, 0>,
   <-LG_BRICK_WIDTH/2+0.04, -LG_BRICK_WIDTH/2+0.04, 0.04+LG_E>
  }
  box {
   <LG_KNOB_RADIUS, LG_KNOB_RADIUS, -LG_E>,
   <-LG_KNOB_RADIUS, -LG_KNOB_RADIUS, 0.1>
  }
 }
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>,
  <LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
 }
 box {
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04>,
  <-LG_BRICK_WIDTH/2+LG_WALL_WIDTH, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE+LG_E>
 }
 difference {
  merge {
   box {
    <-LG_BRICK_WIDTH/2+LG_WALL_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 2*LG_PLATE_HEIGHT-LG_CORNER_SPACE*(1+2*sin(lg_angle))>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.04+LG_CORNER_SPACE>
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.04>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT>
   }
  }
  box {
   <0, -LG_BRICK_WIDTH/2-LG_E, 0>,
   <-(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/sin(lg_angle), LG_BRICK_WIDTH/2+LG_E, 2*LG_PLATE_HEIGHT>
   rotate <0, 90-lg_angle*180/pi, 0>
   translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
  }
 }
 difference {
  box {
   <0, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_CORNER_SPACE>,
   <-(LG_BRICK_WIDTH-2*LG_CORNER_SPACE)/sin(lg_angle), LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>
   rotate <0, 90-lg_angle*180/pi, 0>
   translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT/2-LG_CORNER_SPACE>
  }
  union  {
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH/2+LG_E, 2*LG_PLATE_HEIGHT+LG_E>,
    <-LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH/2-LG_E, LG_PLATE_HEIGHT>
   }
   cylinder {
    <0, 0, 0>,
    <0, 0, LG_KNOB_HEIGHT+LG_E>,
    LG_KNOB_RADIUS
   }
  }
 }
}


#end




















