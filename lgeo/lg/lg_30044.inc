/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19990821 Lutz Uhlmann                                                       */
/* 20080127 Lutz Uhlmann fixed hollow stud logo and orientation                */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_30044: Window 1 x 2 x 3 Curved Top                                       */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_30044)
#else
#declare lg_30044 =
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -8*LG_PLATE_HEIGHT>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   difference {
    union {
     box {
      <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -2.5*LG_PLATE_HEIGHT>
     }
     box {
      <-LG_BRICK_WIDTH/2, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>
     }
    }
    union {
     sphere {
      <0, 0, 0>,
      0.08
      scale <1, 0.2, 1>
      translate <LG_WALL_WIDTH, 0.8*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>
     }
     sphere {
      <0, 0, 0>,
      0.08
      scale <1, 0.2, 1>
      translate <-LG_WALL_WIDTH, 0.8*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>
     }
    }
   }
   difference {
    box {
     <LG_KNOB_RADIUS+LG_E, LG_WALL_WIDTH, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
     <LG_CORNER_SPACE, 2*LG_WALL_WIDTH, -7*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>
    }
    box {
     <LG_WALL_WIDTH, 0, 0>,
     <-LG_WALL_WIDTH, LG_KNOB_RADIUS, -3*LG_BRICK_HEIGHT>
     rotate <0,0,45>
     translate <LG_KNOB_RADIUS*sin(pi/4), LG_BRICK_WIDTH/2-LG_KNOB_RADIUS*sin(pi/4), 0> 
    }
   }
   difference {
    box {
     <-LG_KNOB_RADIUS-LG_E, LG_WALL_WIDTH, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
     <-LG_CORNER_SPACE, 2*LG_WALL_WIDTH,-7*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>
    }
    box {
     <LG_WALL_WIDTH, 0, 0>,
     <-LG_WALL_WIDTH, LG_KNOB_RADIUS, -3*LG_BRICK_HEIGHT>
     rotate <0,0,-45>
     translate <-LG_KNOB_RADIUS*sin(pi/4), LG_BRICK_WIDTH/2-LG_KNOB_RADIUS*sin(pi/4), 0> 
    }
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   torus {
    0.08+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90,0 ,0>
    translate <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   difference {
    union {
     torus {
      LG_BRICK_WIDTH-LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
     torus {
      0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH>,
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
    }
   }
   #if (MIR = 1)
    matrix <-1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 difference {
  box {
   <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.9*LG_BRICK_WIDTH, -7*LG_PLATE_HEIGHT>,
   <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.9*LG_BRICK_WIDTH, -7*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
  }
  union {
   cylinder {
    <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT+LG_E>,
    <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    0.08+LG_CORNER_SPACE
   }
   cylinder {
    <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT>,
    <LG_WALL_WIDTH, 0, -7.5*LG_PLATE_HEIGHT>,
    0.08
   }
   cylinder {
    <-LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT+LG_E>,
    <-LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    0.08+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT>,
    <-LG_WALL_WIDTH, 0, -7.5*LG_PLATE_HEIGHT>,
    0.08
   }
  }
 }
 box {
  <0.06, 0.9*LG_BRICK_WIDTH, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <-0.06, -0.9*LG_BRICK_WIDTH, -6.75*LG_PLATE_HEIGHT>
 }
 difference {
  union {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH-LG_CORNER_SPACE
   }
  }
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2+LG_E, 0, -LG_BRICK_WIDTH>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2-LG_E, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH-LG_E>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E,0.8* LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH-LG_E>
   }
  }
 }
 cylinder {
  <0, 0, 0>,
  <0, 0, -LG_WALL_WIDTH/2>
  LG_KNOB_RADIUS
 }
 object {
  lg_tech_knob_logo
 }
}

#declare lg_30044_clear =
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -8*LG_PLATE_HEIGHT>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   difference {
    merge {
     box {
      <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -2.5*LG_PLATE_HEIGHT>
     }
     box {
      <-LG_BRICK_WIDTH/2, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>
     }
    }
    union {
     sphere {
      <0, 0, 0>,
      0.08
      scale <1, 0.2, 1>
      translate <LG_WALL_WIDTH, 0.8*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>
     }
     sphere {
      <0, 0, 0>,
      0.08
      scale <1, 0.2, 1>
      translate <-LG_WALL_WIDTH, 0.8*LG_BRICK_WIDTH, -3*LG_PLATE_HEIGHT>
     }
    }
   }
   difference {
    box {
     <LG_KNOB_RADIUS+LG_E, LG_WALL_WIDTH, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
     <LG_CORNER_SPACE, 2*LG_WALL_WIDTH, -7*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>
    }
    box {
     <LG_WALL_WIDTH, 0, 0>,
     <-LG_WALL_WIDTH, LG_KNOB_RADIUS, -3*LG_BRICK_HEIGHT>
     rotate <0,0,45>
     translate <LG_KNOB_RADIUS*sin(pi/4), LG_BRICK_WIDTH/2-LG_KNOB_RADIUS*sin(pi/4), 0> 
    }
   }
   difference {
    box {
     <-LG_KNOB_RADIUS-LG_E, LG_WALL_WIDTH, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
     <-LG_CORNER_SPACE, 2*LG_WALL_WIDTH,-7*LG_PLATE_HEIGHT-LG_TOP_HEIGHT+LG_E>
    }
    box {
     <LG_WALL_WIDTH, 0, 0>,
     <-LG_WALL_WIDTH, LG_KNOB_RADIUS, -3*LG_BRICK_HEIGHT>
     rotate <0,0,-45>
     translate <-LG_KNOB_RADIUS*sin(pi/4), LG_BRICK_WIDTH/2-LG_KNOB_RADIUS*sin(pi/4), 0> 
    }
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -8*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   torus {
    0.08+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90,0 ,0>
    translate <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   difference {
    merge {
     torus {
      LG_BRICK_WIDTH-LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
     torus {
      0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH>,
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
    }
   }
   #if (MIR = 1)
    matrix <-1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 difference {
  box {
   <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.9*LG_BRICK_WIDTH, -7*LG_PLATE_HEIGHT>,
   <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.9*LG_BRICK_WIDTH, -7*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
  }
  union {
   cylinder {
    <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT+LG_E>,
    <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    0.08+LG_CORNER_SPACE
   }
   cylinder {
    <LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT>,
    <LG_WALL_WIDTH, 0, -7.5*LG_PLATE_HEIGHT>,
    0.08
   }
   cylinder {
    <-LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT+LG_E>,
    <-LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    0.08+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_WALL_WIDTH, 0, -7*LG_PLATE_HEIGHT>,
    <-LG_WALL_WIDTH, 0, -7.5*LG_PLATE_HEIGHT>,
    0.08
   }
  }
 }
 box {
  <0.06, 0.9*LG_BRICK_WIDTH, -7*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  <-0.06, -0.9*LG_BRICK_WIDTH, -6.75*LG_PLATE_HEIGHT>
 }
 difference {
  merge {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH-LG_CORNER_SPACE
   }
  }
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2+LG_E, 0, -LG_BRICK_WIDTH>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2-LG_E, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH-LG_E>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E,0.8* LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH-LG_E>
   }
  }
 }
 cylinder {
  <0, 0, 0>,
  <0, 0, -LG_WALL_WIDTH/2>
  LG_KNOB_RADIUS
 }
 object {
  lg_tech_knob_logo_clear
 }
}

#end
