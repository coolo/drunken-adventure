/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19990821 Lutz Uhlmann                                                       */
/* 20080128 Lutz Uhlmann fixed hollow stud logo and orientation                */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_30147:Car Grille 1 x 2 x 2 Round Top with Lights                         */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_30147)
#else
#declare lg_30147 =
union {
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -6*LG_PLATE_HEIGHT>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -2.5*LG_PLATE_HEIGHT>
   }
   box {
    <-LG_BRICK_WIDTH/2, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>
   }
   sphere {
    <0, 1.5*LG_BRICK_WIDTH, -1.04>,
    LG_WALL_WIDTH
   }
   cylinder {
    <0, 1.5*LG_BRICK_WIDTH, -1.04>,
    <0, LG_BRICK_WIDTH-LG_E, -1.04>,
    LG_WALL_WIDTH
   }
   difference {
    union {
     cylinder {
      <LG_WALL_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
      LG_CYLINDER_RADIUS-LG_CORNER_SPACE
     }
     cylinder {
      <LG_WALL_WIDTH/2+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
      LG_CYLINDER_RADIUS
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.08-LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0.08-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.08+LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -0.08+LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.08-LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, 1.5*LG_BRICK_WIDTH, -0.08+LG_CORNER_SPACE>
     }
     box {
      <LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.08>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -0.08>
     }
    }
    union {
     cylinder {
      <LG_BRICK_WIDTH/2+LG_E, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
      LG_KNOB_RADIUS+LG_CORNER_SPACE
     }
     cylinder {
      <LG_WALL_WIDTH, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
      LG_KNOB_RADIUS
     }
    }
    translate <0, 0, -1.04>
   }
   torus {
    LG_CYLINDER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -1.04>
   }
   torus {
    LG_KNOB_RADIUS+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -1.04>
   }
   torus {
    LG_CYLINDER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_WALL_WIDTH/2+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -1.04>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 #declare MIR = 0;
 #while (MIR < 2)
  union {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   difference {
    union {
     torus {
      LG_BRICK_WIDTH-LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
     torus {
      0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH>,
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
    }
   }
   #if (MIR = 1)
    matrix <-1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.9*LG_BRICK_WIDTH, -5*LG_PLATE_HEIGHT>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.9*LG_BRICK_WIDTH, -5*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
 }
 difference {
  union {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH-LG_CORNER_SPACE
   }
  }
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2+LG_E, 0, -LG_BRICK_WIDTH>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2-LG_E, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH-LG_E>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E,0.8* LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH-LG_E>
   }
  }
 }
 object {
  lg_plate_column
  translate <0, 0, -6*LG_PLATE_HEIGHT>
 }
 cylinder {
  <0, 0, 0>,
  <0, 0, -LG_WALL_WIDTH/2>
  LG_KNOB_RADIUS
 }
 object {
  lg_tech_knob_logo
  rotate <0, 0, 90>
 }
 intersection {
  union {
   box {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH, -6*LG_PLATE_HEIGHT>,
    <0, -LG_BRICK_WIDTH, -LG_BRICK_WIDTH>
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <0, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH
   }
  }
  union {
   box {
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH/2, 0.9*LG_BRICK_WIDTH, -6*LG_PLATE_HEIGHT>,
    <1.5*LG_WALL_WIDTH, -0.9*LG_BRICK_WIDTH, -LG_BRICK_WIDTH>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <1.5*LG_WALL_WIDTH, 0, -LG_BRICK_WIDTH>,
    0.9*LG_BRICK_WIDTH
   }
   #declare RIB = -5.5;
   #while (RIB < 6)
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, (LG_BRICK_WIDTH-LG_WALL_WIDTH)/25, -5*LG_PLATE_HEIGHT-LG_E>
     <LG_BRICK_WIDTH/2-LG_WALL_WIDTH/2-LG_E, -(LG_BRICK_WIDTH-LG_WALL_WIDTH)/25, -LG_E>
     translate <0, RIB*(LG_BRICK_WIDTH-LG_WALL_WIDTH)/6.25, 0>
    }
    #declare RIB = RIB + 1;
   #end
  }
 }
}

#declare lg_30147_clear =
merge {
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   sphere {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   sphere {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_WALL_WIDTH, -6*LG_PLATE_HEIGHT>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>,
    LG_CORNER_SPACE
   }
   box {
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0.8*LG_BRICK_WIDTH, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH, -2.5*LG_PLATE_HEIGHT>
   }
   box {
    <-LG_BRICK_WIDTH/2, 0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -2.5*LG_PLATE_HEIGHT>
   }
   sphere {
    <0, 1.5*LG_BRICK_WIDTH, -1.04>,
    LG_WALL_WIDTH
   }
   cylinder {
    <0, 1.5*LG_BRICK_WIDTH, -1.04>,
    <0, LG_BRICK_WIDTH-LG_E, -1.04>,
    LG_WALL_WIDTH
   }
   difference {
    merge {
     cylinder {
      <LG_WALL_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
      LG_CYLINDER_RADIUS-LG_CORNER_SPACE
     }
     cylinder {
      <LG_WALL_WIDTH/2+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
      LG_CYLINDER_RADIUS
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.08-LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0.08-LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     cylinder {
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -0.08+LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -0.08+LG_CORNER_SPACE>,
      LG_CORNER_SPACE
     }
     box {
      <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.08-LG_CORNER_SPACE>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE-LG_E, 1.5*LG_BRICK_WIDTH, -0.08+LG_CORNER_SPACE>
     }
     box {
      <LG_WALL_WIDTH, LG_BRICK_WIDTH-LG_CORNER_SPACE, 0.08>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -0.08>
     }
    }
    union {
     cylinder {
      <LG_BRICK_WIDTH/2+LG_E, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, 0>,
      LG_KNOB_RADIUS+LG_CORNER_SPACE
     }
     cylinder {
      <LG_WALL_WIDTH, 1.5*LG_BRICK_WIDTH, 0>,
      <LG_BRICK_WIDTH/2, 1.5*LG_BRICK_WIDTH, 0>,
      LG_KNOB_RADIUS
     }
    }
    translate <0, 0, -1.04>
   }
   torus {
    LG_CYLINDER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -1.04>
   }
   torus {
    LG_KNOB_RADIUS+LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -1.04>
   }
   torus {
    LG_CYLINDER_RADIUS-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_WALL_WIDTH/2+LG_CORNER_SPACE, 1.5*LG_BRICK_WIDTH, -1.04>
   }
   #if (MIR = 1)
    matrix <1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 #declare MIR = 0;
 #while (MIR < 2)
  merge {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT>
   }
   box {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH-LG_CORNER_SPACE, -6*LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -5*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
   }
   difference {
    merge {
     torus {
      LG_BRICK_WIDTH-LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
     torus {
      0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE,
      LG_CORNER_SPACE
      rotate <0, 0, 90>
      translate <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>
     }
    }
    box {
     <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH>,
     <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
    }
   }
   #if (MIR = 1)
    matrix <-1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
   #end
  }
  #declare MIR = MIR + 1;
 #end
 box {
  <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0.9*LG_BRICK_WIDTH, -5*LG_PLATE_HEIGHT>,
  <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, -0.9*LG_BRICK_WIDTH, -5*LG_PLATE_HEIGHT-LG_TOP_HEIGHT>
 }
 difference {
  merge {
   cylinder {
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH-LG_CORNER_SPACE
   }
  }
  union {
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2+LG_E, 0, -LG_BRICK_WIDTH>,
    <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_BRICK_WIDTH/2-LG_E, 0, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2+LG_CORNER_SPACE, 0, -LG_BRICK_WIDTH>,
    0.8*LG_BRICK_WIDTH+LG_CORNER_SPACE
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E, LG_BRICK_WIDTH+LG_E, -LG_BRICK_WIDTH-LG_E>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH-LG_E, -2*LG_BRICK_WIDTH-LG_E>
   }
   box {
    <LG_BRICK_WIDTH/2+LG_E,0.8* LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH>,
    <-LG_BRICK_WIDTH/2-LG_E, -LG_BRICK_WIDTH+LG_CORNER_SPACE, -2*LG_BRICK_WIDTH-LG_E>
   }
  }
 }
 object {
  lg_plate_column_clear
  translate <0, 0, -6*LG_PLATE_HEIGHT>
 }
 cylinder {
  <0, 0, 0>,
  <0, 0, -LG_WALL_WIDTH/2>
  LG_KNOB_RADIUS
 }
 object {
  lg_tech_knob_logo_clear
  rotate <0, 0, 90>
 }
 intersection {
  merge {
   box {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH, -6*LG_PLATE_HEIGHT>,
    <0, -LG_BRICK_WIDTH, -LG_BRICK_WIDTH>
   }
   cylinder {
    <LG_BRICK_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <0, 0, -LG_BRICK_WIDTH>,
    LG_BRICK_WIDTH
   }
  }
  merge {
   box {
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH/2, 0.9*LG_BRICK_WIDTH, -6*LG_PLATE_HEIGHT>,
    <1.5*LG_WALL_WIDTH, -0.9*LG_BRICK_WIDTH, -LG_BRICK_WIDTH>
   }
   cylinder {
    <LG_BRICK_WIDTH/2-LG_WALL_WIDTH/2, 0, -LG_BRICK_WIDTH>,
    <1.5*LG_WALL_WIDTH, 0, -LG_BRICK_WIDTH>,
    0.9*LG_BRICK_WIDTH
   }
   #declare RIB = -5.5;
   #while (RIB < 6)
    box {
     <LG_BRICK_WIDTH/2-LG_CORNER_SPACE, (LG_BRICK_WIDTH-LG_WALL_WIDTH)/25, -5*LG_PLATE_HEIGHT-LG_E>
     <LG_BRICK_WIDTH/2-LG_WALL_WIDTH/2-LG_E, -(LG_BRICK_WIDTH-LG_WALL_WIDTH)/25, -LG_E>
     translate <0, RIB*(LG_BRICK_WIDTH-LG_WALL_WIDTH)/6.25, 0>
    }
    #declare RIB = RIB + 1;
   #end
  }
 }
}

#end
