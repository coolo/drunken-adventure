/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19971031 Lutz Uhlmann                                                       */
/* 20071123 Lutz Uhlmann fixed stud notches height to fit studs with logo      */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_2376: Tile 2 x 2 Round with Lifting Ring                                 */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_2376)
#else
#declare lg_2376 =
union {
 torus {
  LG_BRICK_WIDTH-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_CORNER_SPACE>
 }
 difference {
  union {
   torus {
    LG_BRICK_WIDTH-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, 0>
    translate <0, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <0, 0, -LG_CORNER_SPACE>,
    <0, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_BRICK_WIDTH
   }
   cylinder {
    <0, 0, -LG_PLATE_HEIGHT>,
    <0, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    LG_BRICK_WIDTH-LG_CORNER_SPACE
   }
  }
  union {
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_PLATE_HEIGHT-LG_E>,
    LG_BRICK_WIDTH-LG_WALL_WIDTH
   }
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_BRICK_HEIGHT-LG_E>,
    LG_BRICK_WIDTH-LG_WALL_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   cylinder {
    <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   cylinder {
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   cylinder {
    <LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   box {
    <LG_BRICK_WIDTH+LG_E, 0.18, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH-LG_E, -0.18, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>
    rotate <0, 0, 45>
   }
   box {
    <LG_BRICK_WIDTH+LG_E, 0.18, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH-LG_E, -0.18, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>
    rotate <0, 0, -45>
   }
  }
 }
 cylinder {
  <0, 0, 0>,
  <0, 0, -LG_TOP_HEIGHT>,
  LG_BRICK_WIDTH-LG_CORNER_SPACE
 }
 #declare ROT = 0;
 #while (ROT < 2)
  union {
   cylinder {
    <0, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    <0, LG_CYLINDER_RADIUS-0.04, -LG_TOP_HEIGHT+LG_E>,
    0.04
   }
   cylinder {
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_PLATE_HEIGHT+0.04>,
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_TOP_HEIGHT+LG_E>,
    0.04
   }
   cylinder {
    <0, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_PLATE_HEIGHT+0.04>,
    0.04
   }
   sphere {
    <0, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    0.04
   }
   sphere {
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_PLATE_HEIGHT+0.04>,
    0.04
   }
   box {
    <0.04, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    <-0.04, -LG_CYLINDER_RADIUS+0.04, -LG_TOP_HEIGHT+LG_E>
   }
   rotate <0, 0, 45+90*ROT>
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  union {
   cylinder {
    <LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_BRICK_WIDTH/2
   }
   box {
    <LG_WALL_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_E>,
    <-LG_WALL_WIDTH, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
   }
   box {
    <LG_WALL_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH/2, -LG_E>,
    <-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
   }
  }
  union {
   cylinder {
    <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <LG_WALL_WIDTH+LG_E, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH-LG_E, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_KNOB_RADIUS
   }
  }
 }
 cylinder {
  <LG_WALL_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <LG_WALL_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
}

#declare lg_2376_clear =
merge {
 torus {
  LG_BRICK_WIDTH-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <90, 0, 0>
  translate <0, 0, -LG_CORNER_SPACE>
 }
 difference {
  merge {
   torus {
    LG_BRICK_WIDTH-LG_CORNER_SPACE,
    LG_CORNER_SPACE
    rotate <90, 0, 0>
    translate <0, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>
   }
   cylinder {
    <0, 0, -LG_CORNER_SPACE>,
    <0, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE>,
    LG_BRICK_WIDTH
   }
   cylinder {
    <0, 0, -LG_PLATE_HEIGHT>,
    <0, 0, -LG_PLATE_HEIGHT+LG_CORNER_SPACE+LG_E>,
    LG_BRICK_WIDTH-LG_CORNER_SPACE
   }
  }
  union {
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_PLATE_HEIGHT-LG_E>,
    LG_BRICK_WIDTH-LG_WALL_WIDTH
   }
   cylinder {
    <0, 0, 0>,
    <0, 0, -LG_BRICK_HEIGHT-LG_E>,
    LG_BRICK_WIDTH-LG_WALL_WIDTH
   }
   cylinder {
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   cylinder {
    <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH/2, LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   cylinder {
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   cylinder {
    <LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT-LG_E>,
    <LG_BRICK_WIDTH/2, -LG_BRICK_WIDTH/2, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>,
    LG_KNOB_RADIUS+LG_E
   }
   box {
    <LG_BRICK_WIDTH+LG_E, 0.18, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH-LG_E, -0.18, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>
    rotate <0, 0, 45>
   }
   box {
    <LG_BRICK_WIDTH+LG_E, 0.18, -LG_PLATE_HEIGHT-LG_E>,
    <-LG_BRICK_WIDTH-LG_E, -0.18, -LG_PLATE_HEIGHT+LG_KNOB_HEIGHT+2*LG_E>
    rotate <0, 0, -45>
   }
  }
 }
 cylinder {
  <0, 0, 0>,
  <0, 0, -LG_TOP_HEIGHT>,
  LG_BRICK_WIDTH-LG_CORNER_SPACE
 }
 #declare ROT = 0;
 #while (ROT < 2)
  merge {
   cylinder {
    <0, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    <0, LG_CYLINDER_RADIUS-0.04, -LG_TOP_HEIGHT+LG_E>,
    0.04
   }
   cylinder {
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_PLATE_HEIGHT+0.04>,
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_TOP_HEIGHT+LG_E>,
    0.04
   }
   cylinder {
    <0, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_PLATE_HEIGHT+0.04>,
    0.04
   }
   sphere {
    <0, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    0.04
   }
   sphere {
    <0, -LG_CYLINDER_RADIUS+0.04, -LG_PLATE_HEIGHT+0.04>,
    0.04
   }
   box {
    <0.04, LG_CYLINDER_RADIUS-0.04, -LG_PLATE_HEIGHT+0.04>,
    <-0.04, -LG_CYLINDER_RADIUS+0.04, -LG_TOP_HEIGHT+LG_E>
   }
   rotate <0, 0, 45+90*ROT>
  }
  #declare ROT = ROT + 1;
 #end
 difference {
  merge {
   cylinder {
    <LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_BRICK_WIDTH/2-LG_CORNER_SPACE
   }
   cylinder {
    <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_BRICK_WIDTH/2
   }
   box {
    <LG_WALL_WIDTH, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, -LG_E>,
    <-LG_WALL_WIDTH, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
   }
   box {
    <LG_WALL_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH/2, -LG_E>,
    <-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
   }
  }
  union {
   cylinder {
    <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <LG_WALL_WIDTH+LG_E, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH-LG_E, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_KNOB_RADIUS+LG_CORNER_SPACE
   }
   cylinder {
    <LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    <-LG_WALL_WIDTH, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
    LG_KNOB_RADIUS
   }
  }
 }
 cylinder {
  <LG_WALL_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <LG_WALL_WIDTH-LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, LG_BRICK_WIDTH/2-LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 cylinder {
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <-LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>,
  <LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_BRICK_WIDTH/2+LG_CORNER_SPACE,-LG_E>,
  LG_CORNER_SPACE
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
 torus {
  LG_BRICK_WIDTH/2-LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <LG_WALL_WIDTH-LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
 torus {
  LG_KNOB_RADIUS+LG_CORNER_SPACE,
  LG_CORNER_SPACE
  rotate <0, 0, 90>
  translate <-LG_WALL_WIDTH+LG_CORNER_SPACE, 0, LG_PLATE_HEIGHT+LG_KNOB_RADIUS>
 }
}

#end
