/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* 19981026 Lutz Uhlmann                                                       */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */
/* lg_3857: Baseplate 16 x 32                                                  */
/*                                                                             */ 
/*******************************************************************************/
#ifdef(lg_3857)
#else
#declare LENGTH = 16;
#declare WIDTH = 32;
#declare lg_3857 = 
union {
 #declare ROT = 0;
 #while (ROT < 2)
  union {
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   #if (ROT=1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end 
 difference {
  union {
   difference {
    box {
     <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
     <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT>
    }
    union {
     #declare ROT = 0;
     #while (ROT < 2)
      union {
       box {
        <0, 0, LG_E>,
        <2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, 45>
        translate <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, 0>
       }
       box {
        <0, 0, LG_E>,
        <-2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, -45>
        translate <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, 0>
       }
       #if (ROT=1)
        rotate <0, 0, 180>
       #end
      }
      #declare ROT = ROT + 1;
     #end 
    }
   }
   difference {
    box {
     <LENGTH/2*LG_BRICK_WIDTH, WIDTH/2*LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
     <-LENGTH/2*LG_BRICK_WIDTH, -WIDTH/2*LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_CORNER_SPACE>
    }
    union {
     #declare ROT = 0;
     #while (ROT < 2)
      union {
       box {
        <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH,LG_E>,
        <LENGTH/2*LG_BRICK_WIDTH+LG_E, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)),LG_E>,
        <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH, WIDTH/2*LG_BRICK_WIDTH+LG_E,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH,LG_E>,
        <-LENGTH/2*LG_BRICK_WIDTH-LG_E, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)),LG_E>,
        <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH, WIDTH/2*LG_BRICK_WIDTH+LG_E,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <0, -2*LG_WALL_WIDTH, LG_E>,
        <2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, 45>
        translate <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), 0>
       }
       box {
        <-2*LG_WALL_WIDTH, 0, LG_E>,
        <2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, -45>
        translate <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), 0>
       }
       #if (ROT=1)
        rotate <0, 0, 180>
       #end
      }
      #declare ROT = ROT + 1;
     #end 
    }
   }
  }
  union {
   #declare CYL_X = 0;
   #while (CYL_X < WIDTH)
    #declare CYL_Y = 0;
    #while (CYL_Y < LENGTH)
     cylinder {
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, LG_E>,
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT-LG_E>,
      LG_KNOB_INNER_RADIUS
     }
     cylinder {
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_KNOB_CORNER_SPACE>,
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT-LG_E>,
      LG_KNOB_INNER_RADIUS+LG_KNOB_CORNER_SPACE
     }
     #declare CYL_Y = CYL_Y + 1;
    #end
    #declare CYL_X = CYL_X + 1;
   #end
  }
 }
 union {
  #declare CYL_X = 0;
  #while (CYL_X < WIDTH)
   #declare CYL_Y = 0;
   #while (CYL_Y < LENGTH)
    torus {
     (LG_KNOB_INNER_RADIUS+LG_KNOB_CORNER_SPACE),
     LG_KNOB_CORNER_SPACE
     rotate <90, 0, 0>
     translate <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_KNOB_CORNER_SPACE>
    }
    object {
     lg_knob
     translate <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, 0>
    }
    #declare CYL_Y = CYL_Y + 1;
   #end
   #declare CYL_X = CYL_X + 1;
  #end
 }
}

#declare lg_3857_clear = 
merge {
 #declare ROT = 0;
 #while (ROT < 2)
  merge {
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   sphere {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>, LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   cylinder {
    <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, -LG_TOP_HEIGHT+LG_CORNER_SPACE>,
    LG_CORNER_SPACE
   }
   #if (ROT=1)
    rotate <0, 0, 180>
   #end
  }
  #declare ROT = ROT + 1;
 #end 
 difference {
  merge {
   difference {
    box {
     <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0>,
     <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -WIDTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, -LG_TOP_HEIGHT>
    }
    merge {
     #declare ROT = 0;
     #while (ROT < 2)
      merge {
       box {
        <0, 0, LG_E>,
        <2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, 45>
        translate <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, 0>
       }
       box {
        <0, 0, LG_E>,
        <-2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, -45>
        translate <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, 0>
       }
       #if (ROT=1)
        rotate <0, 0, 180>
       #end
      }
      #declare ROT = ROT + 1;
     #end 
    }
   }
   difference {
    box {
     <LENGTH/2*LG_BRICK_WIDTH, WIDTH/2*LG_BRICK_WIDTH, -LG_CORNER_SPACE>,
     <-LENGTH/2*LG_BRICK_WIDTH, -WIDTH/2*LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_CORNER_SPACE>
    }
    merge {
     #declare ROT = 0;
     #while (ROT < 2)
      merge {
       box {
        <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH,LG_E>,
        <LENGTH/2*LG_BRICK_WIDTH+LG_E, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)),LG_E>,
        <LENGTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH, WIDTH/2*LG_BRICK_WIDTH+LG_E,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH,LG_E>,
        <-LENGTH/2*LG_BRICK_WIDTH-LG_E, WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH+LG_CORNER_SPACE, WIDTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)),LG_E>,
        <-LENGTH/2*LG_BRICK_WIDTH+LG_WALL_WIDTH, WIDTH/2*LG_BRICK_WIDTH+LG_E,-LG_TOP_HEIGHT-LG_E>
       }
       box {
        <0, -2*LG_WALL_WIDTH, LG_E>,
        <2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, 45>
        translate <LENGTH/2*LG_BRICK_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), 0>
       }
       box {
        <-2*LG_WALL_WIDTH, 0, LG_E>,
        <2*LG_WALL_WIDTH, 2*LG_WALL_WIDTH, -LG_TOP_HEIGHT-LG_E> 
        rotate <0, 0, -45>
        translate <-LENGTH/2*LG_BRICK_WIDTH+LG_CORNER_SPACE*(1-sin(pi/4)), WIDTH/2*LG_BRICK_WIDTH-LG_WALL_WIDTH-LG_CORNER_SPACE*(1-sin(pi/4)), 0>
       }
       #if (ROT=1)
        rotate <0, 0, 180>
       #end
      }
      #declare ROT = ROT + 1;
     #end 
    }
   }
  }
  merge {
   #declare CYL_X = 0;
   #while (CYL_X < WIDTH)
    #declare CYL_Y = 0;
    #while (CYL_Y < LENGTH)
     cylinder {
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, LG_E>,
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT-LG_E>,
      LG_KNOB_INNER_RADIUS
     }
     cylinder {
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_KNOB_CORNER_SPACE>,
      <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT-LG_E>,
      LG_KNOB_INNER_RADIUS+LG_KNOB_CORNER_SPACE
     }
     #declare CYL_Y = CYL_Y + 1;
    #end
    #declare CYL_X = CYL_X + 1;
   #end
  }
 }
 merge {
  #declare CYL_X = 0;
  #while (CYL_X < WIDTH)
   #declare CYL_Y = 0;
   #while (CYL_Y < LENGTH)
    torus {
     (LG_KNOB_INNER_RADIUS+LG_KNOB_CORNER_SPACE),
     LG_KNOB_CORNER_SPACE
     rotate <90, 0, 0>
     translate <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, -LG_TOP_HEIGHT+LG_KNOB_CORNER_SPACE>
    }
    object {
     lg_knob_clear
     translate <(LENGTH/2-0.5-CYL_Y)*LG_BRICK_WIDTH, (WIDTH/2-0.5-CYL_X)*LG_BRICK_WIDTH, 0>
    }
    #declare CYL_Y = CYL_Y + 1;
   #end
   #declare CYL_X = CYL_X + 1;
  #end
 }
}

#end
